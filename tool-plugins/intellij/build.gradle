/*
 * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

// Todo - Uncomment after implementing mixin classes
//import org.jetbrains.grammarkit.tasks.*
//
//buildscript {
//    repositories {
//        maven { url 'https://jitpack.io'}
//    }
//    dependencies{
//        classpath "com.github.JetBrains:gradle-grammar-kit-plugin:2018.1.2"
//    }
//}

plugins {
    id "org.jetbrains.intellij" version "0.2.5"
    id "de.undercouch.download" version "3.2.0"
}

version = ballerinaPluginVersion

repositories {
    mavenCentral()
    maven { url 'http://dl.bintray.com/jetbrains/intellij-plugin-service' }
}

apply plugin: 'java'
sourceSets {
    main {
        java {
            srcDirs = ['src/main/java', 'src/main/gen']
        }
    }
}

apply plugin: 'org.jetbrains.intellij'
intellij {
    // For a full list of IntelliJ IDEA releases, please see https://www.jetbrains.com/intellij-repository/releases.
    version ideaVersion
    type ideaType
    pluginName ballerinaPluginName
    updateSinceUntilBuild false
    // plugins 'coverage' //Bundled plugin dependencies
    // Uncomment this line to test the plugin using small IDEs. Add -Dorg.gradle.project.localIdePath="IDE_HOME_PATH"
    // VM option in run config.
    // alternativeIdePath localIdePath
}

apply plugin: 'de.undercouch.download'
task downloadPsiViewerPlugin() {
    download {
        src 'https://plugins.jetbrains.com/plugin/download?updateId=31087'
        dest new File("${buildDir}/tmp/plugins/", 'PsiViewer.jar')
        onlyIfNewer true
    }
}

task copyPsiViewerPluginToSandBox(type: Copy) {
    from "${buildDir}/tmp/plugins/PsiViewer.jar"
    into "${buildDir}/idea-sandbox/plugins/"
}

//copyPsiViewerPluginToSandBox.dependsOn downloadPsiViewerPlugin
copyPsiViewerPluginToSandBox.mustRunAfter prepareSandbox
runIde.dependsOn copyPsiViewerPluginToSandBox

apply plugin: 'checkstyle'
checkstyle {
    configDir new File("src/main/resources/checkstyle")
    checkstyleMain {
        source "src/main/java"
        include '**/*.java'
    }
    checkstyleTest {
        source "src/test/java"
    }
}

runIde.dependsOn check
build.dependsOn check

// Todo - Uncomment after implementing mixin classes
//configurations {
//    bnf
//}
//
//dependencies {
//    bnf files("$buildDir/tools/tmp/GrammarKit/lib/grammar-kit.jar")
//    bnf files("$buildDir/tools/light-psi-all.jar")
//}
//
//task downloadJFlexJar() {
//    download {
//        src 'https://jetbrains.bintray.com/intellij-third-party-dependencies/org/jetbrains/intellij/deps/jflex/jflex/1.7.0/jflex-1.7.0.jar'
//        dest new File("$buildDir/tools/", "JFlex.jar")
//        onlyIfNewer true
//    }
//}
//
//task downloadJFlexSkeleton() {
//    download {
//        src 'https://raw.github.com/JetBrains/intellij-community/master/tools/lexer/idea-flex.skeleton'
//        dest new File("$buildDir/tools/", "idea-flex.skeleton")
//        onlyIfNewer true
//    }
//}
//
//task downloadGrammarKit() {
//    download {
//        src 'https://github.com/JetBrains/Grammar-Kit/releases/download/1.5.1/GrammarKit.zip'
//        dest new File("$buildDir/tools/", "GrammarKit.zip")
//        onlyIfNewer true
//    }
//}
//
//task downloadGrammarLightPsi() {
//    download {
//        src 'https://github.com/JetBrains/Grammar-Kit/releases/download/1.5.1/light-psi-all.jar'
//        dest new File("$buildDir/tools/", "light-psi-all.jar")
//        onlyIfNewer true
//    }
//}
//
//task unzipGrammarKit(type: Copy) {
//    from zipTree("$buildDir/tools/GrammarKit.zip")
//    into "${buildDir}/tools/tmp"
//}
//
//unzipGrammarKit.dependsOn downloadGrammarKit
//
//apply plugin: 'org.jetbrains.grammarkit'
//grammarKit {
//    // version of IntelliJ patched JFlex (see bintray link below), Default is 1.7.0
//    jflexRelease = '1.7.0'
//
//    // tag or short commit hash of Grammar-Kit to use (see link below). Default is 2017.1.2
//    grammarKitRelease = '34fd65b92a'
//}
//
//task generateLexer(type: GenerateLexer) {
//    // source flex file
//    source = "src/main/java/org/ballerinalang/plugins/idea/grammar/Ballerina.flex"
//
//    // target directory for lexer
//    targetDir = "src/main/gen/org/ballerinalang/plugins/idea/lexer/"
//
//    // target classname, target file will be targetDir/targetClass.java
//    targetClass = "BallerinaLexer"
//
//    // optional, path to the task-specific skeleton file. Default: none
//    skeleton = "$buildDir/tools/idea-flex.skeleton"
//
//    // if set, plugin will remove a lexer output file before generating new one. Default: false
//    purgeOldFiles = true
//}
//
//task generateParser(type: GenerateParser) {
//    // source bnf file
//    source = 'src/main/java/org/ballerinalang/plugins/idea/grammar/Ballerina.bnf'
//
//    // optional, task-specific root for the generated files. Default: none
//    targetRoot = 'src/main/gen/'
//
//    // path to a parser file, relative to the targetRoot
//    pathToParser = 'org/ballerinalang/plugins/idea/parser/BallerinaParser.java'
//
//    // path to a directory with generated psi files, relative to the targetRoot
//    pathToPsiRoot = 'org/ballerinalang/plugins/idea/psi'
//
//    // if set, plugin will remove a parser output file and psi output directory before generating new ones. Default: false
//    purgeOldFiles = true
//
//    classpath += files("$buildDir")
//}
//
//task generateSources() {
//    dependsOn generateParser, generateLexer
//}
//
//compileJava.dependsOn generateSources
