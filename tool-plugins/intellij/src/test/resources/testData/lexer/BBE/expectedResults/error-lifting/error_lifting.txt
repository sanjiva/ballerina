import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('io')
; (';')
WHITE_SPACE ('\n\n')
type ('type')
WHITE_SPACE (' ')
identifier ('Response')
WHITE_SPACE (' ')
record ('record')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
identifier ('Status')
| ('|')
identifier ('error')
WHITE_SPACE (' ')
identifier ('status')
; (';')
WHITE_SPACE ('\n')
} ('}')
; (';')
WHITE_SPACE ('\n\n')
type ('type')
WHITE_SPACE (' ')
identifier ('Status')
WHITE_SPACE (' ')
record ('record')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
string ('string')
WHITE_SPACE (' ')
identifier ('message')
; (';')
WHITE_SPACE ('\n    ')
int ('int')
WHITE_SPACE (' ')
identifier ('code')
; (';')
WHITE_SPACE ('\n')
} ('}')
; (';')
WHITE_SPACE ('\n\n')
function ('function')
WHITE_SPACE (' ')
identifier ('main')
( ('(')
string ('string')
... ('...')
WHITE_SPACE (' ')
identifier ('args')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
identifier ('error')
WHITE_SPACE (' ')
identifier ('e')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
identifier ('message')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"response error"')
WHITE_SPACE (' ')
} ('}')
; (';')
WHITE_SPACE ('\n    ')
identifier ('Response')
| ('|')
identifier ('error')
WHITE_SPACE (' ')
identifier ('firstResponse')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('e')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// Navigate the fields, by lifting the error. ')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// Using the `!` operator stops the navigation if the value returned is `error`, and then')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// assigns that to the `statusCode1` variable.')
WHITE_SPACE ('\n    ')
int ('int')
| ('|')
identifier ('error')
WHITE_SPACE (' ')
identifier ('statusCode1')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('firstResponse')
! ('!')
identifier ('status')
! ('!')
identifier ('code')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"The status code: "')
, (',')
WHITE_SPACE (' ')
identifier ('statusCode1')
) (')')
; (';')
WHITE_SPACE ('\n\n\n    ')
LINE_COMMENT ('// Consider a scenario where the `secondResponse` is null.')
WHITE_SPACE ('\n    ')
identifier ('Response')
| ('|')
identifier ('error')
| ('|')
( ('(')
) (')')
WHITE_SPACE (' ')
identifier ('secondResponse')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
( ('(')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// The error lifting operator lifts null by default. If the `secondResponse`')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// is null, it stops navigating the rest of the fields and the value')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// of the `secondResponse!status!code` expression evaluates to null.')
WHITE_SPACE ('\n    ')
int ('int')
| ('|')
identifier ('error')
| ('|')
( ('(')
) (')')
WHITE_SPACE (' ')
identifier ('statusCode2')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('secondResponse')
! ('!')
identifier ('status')
! ('!')
identifier ('code')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"The status code: "')
, (',')
WHITE_SPACE (' ')
identifier ('statusCode2')
) (')')
; (';')
WHITE_SPACE ('\n')
} ('}')
