import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('io')
; (';')
WHITE_SPACE ('\n\n')
function ('function')
WHITE_SPACE (' ')
identifier ('main')
( ('(')
string ('string')
... ('...')
WHITE_SPACE (' ')
identifier ('args')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
string ('string')
| ('|')
( ('(')
) (')')
WHITE_SPACE (' ')
identifier ('x')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
NULL_LITERAL ('null')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// If you need to get the string value of x, and if the value of x is `null`, you may want')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// to assign a known value. This is how you can do it via Match')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// Expression.')
WHITE_SPACE ('\n    ')
string ('string')
WHITE_SPACE (' ')
identifier ('matchExprOutput')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('x')
WHITE_SPACE (' ')
but ('but')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
string ('string')
WHITE_SPACE (' ')
identifier ('s')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
identifier ('s')
, (',')
WHITE_SPACE ('\n        ')
( ('(')
) (')')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"value is null"')
WHITE_SPACE ('\n    ')
} ('}')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"The output from match expression: "')
, (',')
WHITE_SPACE (' ')
identifier ('matchExprOutput')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// This shows how to achieve the same via the Elvis operator.')
WHITE_SPACE ('\n    ')
string ('string')
WHITE_SPACE (' ')
identifier ('elvisOutput')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('x')
WHITE_SPACE (' ')
ELVIS ('?:')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"value is null"')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"The output from elvis operator: "')
, (',')
WHITE_SPACE (' ')
identifier ('elvisOutput')
) (')')
; (';')
WHITE_SPACE ('\n')
} ('}')
