import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('runtime')
; (';')
WHITE_SPACE ('\n')
import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('io')
; (';')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// Create a record type that represents the device temperature reading.')
WHITE_SPACE ('\n')
type ('type')
WHITE_SPACE (' ')
identifier ('DeviceTempInfo')
WHITE_SPACE (' ')
record ('record')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
int ('int')
WHITE_SPACE (' ')
identifier ('deviceID')
; (';')
WHITE_SPACE ('\n    ')
int ('int')
WHITE_SPACE (' ')
identifier ('roomNo')
; (';')
WHITE_SPACE ('\n    ')
float ('float')
WHITE_SPACE (' ')
identifier ('temp')
; (';')
WHITE_SPACE ('\n')
} ('}')
; (';')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// Create a record type that represents the initial temperature and the peak temperature.')
WHITE_SPACE ('\n')
type ('type')
WHITE_SPACE (' ')
identifier ('TempDiffInfo')
WHITE_SPACE (' ')
record ('record')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
float ('float')
WHITE_SPACE (' ')
identifier ('initialTemp')
; (';')
WHITE_SPACE ('\n    ')
float ('float')
WHITE_SPACE (' ')
identifier ('peakTemp')
; (';')
WHITE_SPACE ('\n')
} ('}')
; (';')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// The stream that gets the input temperature readings.')
WHITE_SPACE ('\n')
stream ('stream')
< ('<')
identifier ('DeviceTempInfo')
> ('>')
WHITE_SPACE (' ')
identifier ('tempStream')
; (';')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// The output stream with peak temperature values.')
WHITE_SPACE ('\n')
stream ('stream')
< ('<')
identifier ('TempDiffInfo')
> ('>')
WHITE_SPACE (' ')
identifier ('tempDiffInfoStream')
; (';')
WHITE_SPACE ('\n\n')
identifier ('TempDiffInfo')
[ ('[')
] (']')
WHITE_SPACE (' ')
identifier ('tempDiffInfoArray')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
[ ('[')
] (']')
; (';')
WHITE_SPACE ('\n')
int ('int')
WHITE_SPACE (' ')
identifier ('index')
; (';')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// This is the function that contains the rules that detect the temperature peak values. The first event's temperature')
WHITE_SPACE ('\n')
LINE_COMMENT ('// should be greater than the temperature values that are returned with the next event, which is e2. The last')
WHITE_SPACE ('\n')
LINE_COMMENT ('// temperature value in e2 should be greater than the temperature value that is given in the event e3. This makes')
WHITE_SPACE ('\n')
LINE_COMMENT ('// the last value of e2, the peak temperature.')
WHITE_SPACE ('\n')
function ('function')
WHITE_SPACE (' ')
identifier ('deployPeakTempDetectionRules')
( ('(')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
forever ('forever')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
from ('from')
WHITE_SPACE (' ')
every ('every')
WHITE_SPACE (' ')
identifier ('tempStream')
WHITE_SPACE (' ')
as ('as')
WHITE_SPACE (' ')
identifier ('e1')
, (',')
WHITE_SPACE (' ')
identifier ('tempStream')
WHITE_SPACE ('\n            ')
where ('where')
WHITE_SPACE (' ')
identifier ('e1')
. ('.')
identifier ('temp')
WHITE_SPACE (' ')
<= ('<=')
WHITE_SPACE (' ')
identifier ('temp')
WHITE_SPACE (' ')
[ ('[')
DECIMAL_INTEGER_LITERAL ('1')
.. ('..')
] (']')
WHITE_SPACE (' ')
as ('as')
WHITE_SPACE (' ')
identifier ('e2')
, (',')
WHITE_SPACE ('\n        ')
identifier ('tempStream')
WHITE_SPACE (' ')
where ('where')
WHITE_SPACE (' ')
identifier ('e2')
[ ('[')
identifier ('e2')
. ('.')
identifier ('length')
WHITE_SPACE (' ')
- ('-')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('1')
] (']')
. ('.')
identifier ('temp')
WHITE_SPACE (' ')
> ('>')
WHITE_SPACE (' ')
identifier ('temp')
WHITE_SPACE (' ')
as ('as')
WHITE_SPACE (' ')
identifier ('e3')
WHITE_SPACE ('\n        ')
select ('select')
WHITE_SPACE (' ')
identifier ('e1')
. ('.')
identifier ('temp')
WHITE_SPACE (' ')
as ('as')
WHITE_SPACE (' ')
identifier ('initialTemp')
, (',')
WHITE_SPACE ('\n            ')
identifier ('e2')
[ ('[')
identifier ('e2')
. ('.')
identifier ('length')
WHITE_SPACE (' ')
- ('-')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('1')
] (']')
. ('.')
identifier ('temp')
WHITE_SPACE (' ')
as ('as')
WHITE_SPACE (' ')
identifier ('peakTemp')
WHITE_SPACE ('\n        ')
=> ('=>')
WHITE_SPACE (' ')
( ('(')
identifier ('TempDiffInfo')
[ ('[')
] (']')
WHITE_SPACE (' ')
identifier ('tempDiffInfos')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
LINE_COMMENT ('// If the sequence is matched, the data is pushed/published to the output stream.')
WHITE_SPACE ('\n            ')
identifier ('tempDiffInfoStream')
. ('.')
identifier ('publish')
( ('(')
identifier ('tempDiffInfos')
) (')')
; (';')
WHITE_SPACE ('\n        ')
} ('}')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE ('\n\n')
function ('function')
WHITE_SPACE (' ')
identifier ('main')
( ('(')
string ('string')
... ('...')
WHITE_SPACE (' ')
identifier ('args')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n\n    ')
identifier ('index')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('0')
; (';')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// Deploy the streaming sequence rules.')
WHITE_SPACE ('\n    ')
identifier ('deployPeakTempDetectionRules')
( ('(')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// Subscribe to the `printInitialAndPeakTemp` function. This prints the peak temperature values.')
WHITE_SPACE ('\n    ')
identifier ('tempDiffInfoStream')
. ('.')
identifier ('subscribe')
( ('(')
identifier ('printInitalAndPeakTemp')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// Simulating the data that is being sent to the `tempStream` stream.')
WHITE_SPACE ('\n    ')
identifier ('DeviceTempInfo')
WHITE_SPACE (' ')
identifier ('t1')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
identifier ('deviceID')
: (':')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('1')
, (',')
WHITE_SPACE (' ')
identifier ('roomNo')
: (':')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('23')
, (',')
WHITE_SPACE (' ')
identifier ('temp')
: (':')
WHITE_SPACE (' ')
FLOATING_POINT_LITERAL ('20.0')
WHITE_SPACE (' ')
} ('}')
; (';')
WHITE_SPACE ('\n    ')
identifier ('DeviceTempInfo')
WHITE_SPACE (' ')
identifier ('t2')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
identifier ('deviceID')
: (':')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('1')
, (',')
WHITE_SPACE (' ')
identifier ('roomNo')
: (':')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('23')
, (',')
WHITE_SPACE (' ')
identifier ('temp')
: (':')
WHITE_SPACE (' ')
FLOATING_POINT_LITERAL ('22.5')
WHITE_SPACE (' ')
} ('}')
; (';')
WHITE_SPACE ('\n    ')
identifier ('DeviceTempInfo')
WHITE_SPACE (' ')
identifier ('t3')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
identifier ('deviceID')
: (':')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('1')
, (',')
WHITE_SPACE (' ')
identifier ('roomNo')
: (':')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('23')
, (',')
WHITE_SPACE (' ')
identifier ('temp')
: (':')
WHITE_SPACE (' ')
FLOATING_POINT_LITERAL ('23.0')
WHITE_SPACE (' ')
} ('}')
; (';')
WHITE_SPACE ('\n    ')
identifier ('DeviceTempInfo')
WHITE_SPACE (' ')
identifier ('t4')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
identifier ('deviceID')
: (':')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('1')
, (',')
WHITE_SPACE (' ')
identifier ('roomNo')
: (':')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('23')
, (',')
WHITE_SPACE (' ')
identifier ('temp')
: (':')
WHITE_SPACE (' ')
FLOATING_POINT_LITERAL ('21.0')
WHITE_SPACE (' ')
} ('}')
; (';')
WHITE_SPACE ('\n    ')
identifier ('DeviceTempInfo')
WHITE_SPACE (' ')
identifier ('t5')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
identifier ('deviceID')
: (':')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('1')
, (',')
WHITE_SPACE (' ')
identifier ('roomNo')
: (':')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('23')
, (',')
WHITE_SPACE (' ')
identifier ('temp')
: (':')
WHITE_SPACE (' ')
FLOATING_POINT_LITERAL ('24.0')
WHITE_SPACE (' ')
} ('}')
; (';')
WHITE_SPACE ('\n    ')
identifier ('DeviceTempInfo')
WHITE_SPACE (' ')
identifier ('t6')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
identifier ('deviceID')
: (':')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('1')
, (',')
WHITE_SPACE (' ')
identifier ('roomNo')
: (':')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('23')
, (',')
WHITE_SPACE (' ')
identifier ('temp')
: (':')
WHITE_SPACE (' ')
FLOATING_POINT_LITERAL ('23.9')
WHITE_SPACE (' ')
} ('}')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// Start simulating the events with the temperature readings.')
WHITE_SPACE ('\n    ')
identifier ('tempStream')
. ('.')
identifier ('publish')
( ('(')
identifier ('t1')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('runtime')
: (':')
identifier ('sleep')
( ('(')
DECIMAL_INTEGER_LITERAL ('200')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
identifier ('tempStream')
. ('.')
identifier ('publish')
( ('(')
identifier ('t2')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('runtime')
: (':')
identifier ('sleep')
( ('(')
DECIMAL_INTEGER_LITERAL ('200')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
identifier ('tempStream')
. ('.')
identifier ('publish')
( ('(')
identifier ('t3')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('runtime')
: (':')
identifier ('sleep')
( ('(')
DECIMAL_INTEGER_LITERAL ('200')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
identifier ('tempStream')
. ('.')
identifier ('publish')
( ('(')
identifier ('t4')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('runtime')
: (':')
identifier ('sleep')
( ('(')
DECIMAL_INTEGER_LITERAL ('200')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
identifier ('tempStream')
. ('.')
identifier ('publish')
( ('(')
identifier ('t5')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('runtime')
: (':')
identifier ('sleep')
( ('(')
DECIMAL_INTEGER_LITERAL ('200')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
identifier ('tempStream')
. ('.')
identifier ('publish')
( ('(')
identifier ('t6')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// Finished sending all six temperature events.')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// Wait until the results are collected.')
WHITE_SPACE ('\n    ')
int ('int')
WHITE_SPACE (' ')
identifier ('count')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('0')
; (';')
WHITE_SPACE ('\n    ')
while ('while')
WHITE_SPACE (' ')
( ('(')
BOOLEAN_LITERAL ('true')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('runtime')
: (':')
identifier ('sleep')
( ('(')
DECIMAL_INTEGER_LITERAL ('500')
) (')')
; (';')
WHITE_SPACE ('\n        ')
identifier ('count')
++ ('++')
; (';')
WHITE_SPACE ('\n        ')
if ('if')
WHITE_SPACE (' ')
( ('(')
( ('(')
lengthof ('lengthof')
WHITE_SPACE (' ')
identifier ('tempDiffInfoArray')
) (')')
WHITE_SPACE (' ')
> ('>')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('1')
WHITE_SPACE (' ')
|| ('||')
WHITE_SPACE (' ')
identifier ('count')
WHITE_SPACE (' ')
== ('==')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('10')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n            ')
break ('break')
; (';')
WHITE_SPACE ('\n        ')
} ('}')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// The function that prints the peak temperature readings.')
WHITE_SPACE ('\n')
function ('function')
WHITE_SPACE (' ')
identifier ('printInitalAndPeakTemp')
( ('(')
identifier ('TempDiffInfo')
WHITE_SPACE (' ')
identifier ('tempDiff')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"printInitalAndPeakTemp function is invoked. "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE ('\n                    ')
QUOTED_STRING_LITERAL ('"InitialTemp : "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
identifier ('tempDiff')
. ('.')
identifier ('initialTemp')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE ('\n                        ')
QUOTED_STRING_LITERAL ('" and Peak temp : "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
identifier ('tempDiff')
. ('.')
identifier ('peakTemp')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('addToGlobalTempDiffArray')
( ('(')
identifier ('tempDiff')
) (')')
; (';')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// The function that keeps track of all the temperature peak values.')
WHITE_SPACE ('\n')
function ('function')
WHITE_SPACE (' ')
identifier ('addToGlobalTempDiffArray')
( ('(')
identifier ('TempDiffInfo')
WHITE_SPACE (' ')
identifier ('s')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
identifier ('tempDiffInfoArray')
[ ('[')
identifier ('index')
] (']')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('s')
; (';')
WHITE_SPACE ('\n    ')
identifier ('index')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('index')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('1')
; (';')
WHITE_SPACE ('\n')
} ('}')
