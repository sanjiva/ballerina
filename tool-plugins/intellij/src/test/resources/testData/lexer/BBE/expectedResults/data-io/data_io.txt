import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('io')
; (';')
WHITE_SPACE ('\n')
import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('log')
; (';')
WHITE_SPACE ('\n\n')
public ('public')
WHITE_SPACE (' ')
type ('type')
WHITE_SPACE (' ')
identifier ('Person')
WHITE_SPACE (' ')
record ('record')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
string ('string')
WHITE_SPACE (' ')
identifier ('name')
; (';')
WHITE_SPACE ('\n    ')
int ('int')
WHITE_SPACE (' ')
identifier ('age')
; (';')
WHITE_SPACE ('\n    ')
float ('float')
WHITE_SPACE (' ')
identifier ('income')
; (';')
WHITE_SPACE ('\n    ')
boolean ('boolean')
WHITE_SPACE (' ')
identifier ('isMarried')
; (';')
WHITE_SPACE ('\n')
} ('}')
; (';')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('//Serialize record into binary')
WHITE_SPACE ('\n')
function ('function')
WHITE_SPACE (' ')
identifier ('serialize')
( ('(')
identifier ('Person')
WHITE_SPACE (' ')
identifier ('p')
, (',')
WHITE_SPACE (' ')
identifier ('io')
: (':')
identifier ('ByteChannel')
WHITE_SPACE (' ')
identifier ('channel')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('DataChannel')
WHITE_SPACE (' ')
identifier ('dc')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
new ('new')
WHITE_SPACE (' ')
identifier ('io')
: (':')
identifier ('DataChannel')
( ('(')
identifier ('channel')
) (')')
; (';')
WHITE_SPACE ('\n    ')
var ('var')
WHITE_SPACE (' ')
identifier ('length')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
lengthof ('lengthof')
WHITE_SPACE (' ')
identifier ('p')
. ('.')
identifier ('name')
. ('.')
identifier ('toByteArray')
( ('(')
QUOTED_STRING_LITERAL ('"UTF-8"')
) (')')
; (';')
WHITE_SPACE ('\n    ')
var ('var')
WHITE_SPACE (' ')
identifier ('lengthResult')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('dc')
. ('.')
identifier ('writeInt32')
( ('(')
identifier ('length')
) (')')
; (';')
WHITE_SPACE ('\n    ')
var ('var')
WHITE_SPACE (' ')
identifier ('nameResult')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('dc')
. ('.')
identifier ('writeString')
( ('(')
identifier ('p')
. ('.')
identifier ('name')
, (',')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"UTF-8"')
) (')')
; (';')
WHITE_SPACE ('\n    ')
var ('var')
WHITE_SPACE (' ')
identifier ('ageResult')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('dc')
. ('.')
identifier ('writeInt16')
( ('(')
identifier ('p')
. ('.')
identifier ('age')
) (')')
; (';')
WHITE_SPACE ('\n    ')
var ('var')
WHITE_SPACE (' ')
identifier ('incomeResult')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('dc')
. ('.')
identifier ('writeFloat64')
( ('(')
identifier ('p')
. ('.')
identifier ('income')
) (')')
; (';')
WHITE_SPACE ('\n    ')
var ('var')
WHITE_SPACE (' ')
identifier ('maritalStatusResult')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('dc')
. ('.')
identifier ('writeBool')
( ('(')
identifier ('p')
. ('.')
identifier ('isMarried')
) (')')
; (';')
WHITE_SPACE ('\n    ')
var ('var')
WHITE_SPACE (' ')
identifier ('closeResult')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('dc')
. ('.')
identifier ('close')
( ('(')
) (')')
; (';')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('//Deserialize record into binary')
WHITE_SPACE ('\n')
function ('function')
WHITE_SPACE (' ')
identifier ('deserialize')
( ('(')
identifier ('io')
: (':')
identifier ('ByteChannel')
WHITE_SPACE (' ')
identifier ('channel')
) (')')
WHITE_SPACE (' ')
returns ('returns')
WHITE_SPACE (' ')
identifier ('Person')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
identifier ('Person')
WHITE_SPACE (' ')
identifier ('person')
; (';')
WHITE_SPACE ('\n    ')
int ('int')
WHITE_SPACE (' ')
identifier ('nameLength')
; (';')
WHITE_SPACE ('\n    ')
string ('string')
WHITE_SPACE (' ')
identifier ('nameValue')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('DataChannel')
WHITE_SPACE (' ')
identifier ('dc')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
new ('new')
WHITE_SPACE (' ')
identifier ('io')
: (':')
identifier ('DataChannel')
( ('(')
identifier ('channel')
) (')')
; (';')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('//Read 32 bit singed integer')
WHITE_SPACE ('\n    ')
match ('match')
WHITE_SPACE (' ')
identifier ('dc')
. ('.')
identifier ('readInt32')
( ('(')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
int ('int')
WHITE_SPACE (' ')
identifier ('namel')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
identifier ('nameLength')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('namel')
; (';')
WHITE_SPACE ('\n        ')
identifier ('error')
WHITE_SPACE (' ')
identifier ('e')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE ('\n        ')
identifier ('log')
: (':')
identifier ('printError')
( ('(')
QUOTED_STRING_LITERAL ('"Error occurred while reading name length"')
, (',')
WHITE_SPACE ('\n            ')
identifier ('err')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('e')
) (')')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('//Read UTF-8 encoded string represented through specified amount of bytes')
WHITE_SPACE ('\n    ')
match ('match')
WHITE_SPACE (' ')
identifier ('dc')
. ('.')
identifier ('readString')
( ('(')
identifier ('nameLength')
, (',')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"UTF-8"')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
string ('string')
WHITE_SPACE (' ')
identifier ('name')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
identifier ('person')
. ('.')
identifier ('name')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('name')
; (';')
WHITE_SPACE ('\n        ')
identifier ('error')
WHITE_SPACE (' ')
identifier ('e')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE ('\n        ')
identifier ('log')
: (':')
identifier ('printError')
( ('(')
QUOTED_STRING_LITERAL ('"Error occurred while reading name"')
, (',')
WHITE_SPACE ('\n            ')
identifier ('err')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('e')
) (')')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('//Read 16 bit signed integer')
WHITE_SPACE ('\n    ')
match ('match')
WHITE_SPACE (' ')
identifier ('dc')
. ('.')
identifier ('readInt16')
( ('(')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
int ('int')
WHITE_SPACE (' ')
identifier ('age')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
identifier ('person')
. ('.')
identifier ('age')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('age')
; (';')
WHITE_SPACE ('\n        ')
identifier ('error')
WHITE_SPACE (' ')
identifier ('e')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE ('\n        ')
identifier ('log')
: (':')
identifier ('printError')
( ('(')
QUOTED_STRING_LITERAL ('"Error occurred while reading age"')
, (',')
WHITE_SPACE ('\n            ')
identifier ('err')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('e')
) (')')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('//Read 64 bit signed float')
WHITE_SPACE ('\n    ')
match ('match')
WHITE_SPACE (' ')
identifier ('dc')
. ('.')
identifier ('readFloat64')
( ('(')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
float ('float')
WHITE_SPACE (' ')
identifier ('income')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
identifier ('person')
. ('.')
identifier ('income')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('income')
; (';')
WHITE_SPACE ('\n        ')
identifier ('error')
WHITE_SPACE (' ')
identifier ('e')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE ('\n        ')
identifier ('log')
: (':')
identifier ('printError')
( ('(')
QUOTED_STRING_LITERAL ('"Error occurred while reading income"')
, (',')
WHITE_SPACE ('\n            ')
identifier ('err')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('e')
) (')')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('//Read boolean')
WHITE_SPACE ('\n    ')
match ('match')
WHITE_SPACE (' ')
identifier ('dc')
. ('.')
identifier ('readBool')
( ('(')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
boolean ('boolean')
WHITE_SPACE (' ')
identifier ('isMarried')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
identifier ('person')
. ('.')
identifier ('isMarried')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('isMarried')
; (';')
WHITE_SPACE ('\n        ')
identifier ('error')
WHITE_SPACE (' ')
identifier ('e')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE ('\n        ')
identifier ('log')
: (':')
identifier ('printError')
( ('(')
QUOTED_STRING_LITERAL ('"Error occurred while reading marital status"')
, (',')
WHITE_SPACE ('\n            ')
identifier ('err')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('e')
) (')')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('//Finally close the data channel')
WHITE_SPACE ('\n    ')
var ('var')
WHITE_SPACE (' ')
identifier ('closeResult')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('dc')
. ('.')
identifier ('close')
( ('(')
) (')')
; (';')
WHITE_SPACE ('\n    ')
return ('return')
WHITE_SPACE (' ')
identifier ('person')
; (';')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('//Serialize and write record to a file')
WHITE_SPACE ('\n')
function ('function')
WHITE_SPACE (' ')
identifier ('writeRecordToFile')
( ('(')
identifier ('Person')
WHITE_SPACE (' ')
identifier ('p')
, (',')
WHITE_SPACE (' ')
string ('string')
WHITE_SPACE (' ')
identifier ('path')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('ByteChannel')
WHITE_SPACE (' ')
identifier ('wc')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('io')
: (':')
identifier ('openFile')
( ('(')
identifier ('path')
, (',')
WHITE_SPACE (' ')
identifier ('io')
: (':')
identifier ('WRITE')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('serialize')
( ('(')
identifier ('p')
, (',')
WHITE_SPACE (' ')
identifier ('wc')
) (')')
; (';')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('//Read serialized record from file')
WHITE_SPACE ('\n')
function ('function')
WHITE_SPACE (' ')
identifier ('readRecordFromFile')
( ('(')
string ('string')
WHITE_SPACE (' ')
identifier ('path')
) (')')
WHITE_SPACE (' ')
returns ('returns')
WHITE_SPACE (' ')
identifier ('Person')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('ByteChannel')
WHITE_SPACE (' ')
identifier ('rc')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('io')
: (':')
identifier ('openFile')
( ('(')
identifier ('path')
, (',')
WHITE_SPACE (' ')
identifier ('io')
: (':')
identifier ('READ')
) (')')
; (';')
WHITE_SPACE ('\n    ')
return ('return')
WHITE_SPACE (' ')
identifier ('deserialize')
( ('(')
identifier ('rc')
) (')')
; (';')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE ('\n\n')
function ('function')
WHITE_SPACE (' ')
identifier ('main')
( ('(')
string ('string')
... ('...')
identifier ('args')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
identifier ('Person')
WHITE_SPACE (' ')
identifier ('wPerson')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
{ ('{')
identifier ('name')
: (':')
QUOTED_STRING_LITERAL ('"Ballerina"')
, (',')
WHITE_SPACE (' ')
identifier ('age')
: (':')
DECIMAL_INTEGER_LITERAL ('21')
, (',')
WHITE_SPACE (' ')
identifier ('income')
: (':')
FLOATING_POINT_LITERAL ('1543.12')
, (',')
WHITE_SPACE (' ')
identifier ('isMarried')
: (':')
BOOLEAN_LITERAL ('true')
} ('}')
; (';')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('//Write record to file')
WHITE_SPACE ('\n    ')
identifier ('writeRecordToFile')
( ('(')
identifier ('wPerson')
, (',')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"./files/person.bin"')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Person record successfully written to file"')
) (')')
; (';')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('//Read record from file')
WHITE_SPACE ('\n    ')
identifier ('Person')
WHITE_SPACE (' ')
identifier ('rPerson')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('readRecordFromFile')
( ('(')
QUOTED_STRING_LITERAL ('"./files/person.bin"')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Reading person record from file"')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
identifier ('rPerson')
) (')')
; (';')
WHITE_SPACE ('\n')
} ('}')
