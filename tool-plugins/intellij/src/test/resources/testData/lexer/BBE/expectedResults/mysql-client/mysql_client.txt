import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('io')
; (';')
WHITE_SPACE ('\n')
import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('mysql')
; (';')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// Create an endpoint for MySQL database. Change the DB details before running the sample.')
WHITE_SPACE ('\n')
endpoint ('endpoint')
WHITE_SPACE (' ')
identifier ('mysql')
: (':')
identifier ('Client')
WHITE_SPACE (' ')
identifier ('testDB')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
identifier ('host')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"localhost"')
, (',')
WHITE_SPACE ('\n    ')
identifier ('port')
: (':')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('3306')
, (',')
WHITE_SPACE ('\n    ')
identifier ('name')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"testdb"')
, (',')
WHITE_SPACE ('\n    ')
identifier ('username')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"root"')
, (',')
WHITE_SPACE ('\n    ')
identifier ('password')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"root"')
, (',')
WHITE_SPACE ('\n    ')
identifier ('poolOptions')
: (':')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
identifier ('maximumPoolSize')
: (':')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('5')
WHITE_SPACE (' ')
} ('}')
, (',')
WHITE_SPACE ('\n    ')
identifier ('dbOptions')
: (':')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
identifier ('useSSL')
: (':')
WHITE_SPACE (' ')
BOOLEAN_LITERAL ('false')
WHITE_SPACE (' ')
} ('}')
WHITE_SPACE ('\n')
} ('}')
; (';')
WHITE_SPACE ('\n\n')
function ('function')
WHITE_SPACE (' ')
identifier ('main')
( ('(')
string ('string')
... ('...')
WHITE_SPACE (' ')
identifier ('args')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// Creates a table using the update operation.')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"The update operation - Creating a table:"')
) (')')
; (';')
WHITE_SPACE ('\n    ')
var ('var')
WHITE_SPACE (' ')
identifier ('ret')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('testDB')
-> ('->')
identifier ('update')
( ('(')
QUOTED_STRING_LITERAL ('"CREATE TABLE student(id INT AUTO_INCREMENT,\n                          age INT, name VARCHAR(255), PRIMARY KEY (id))"')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('handleUpdate')
( ('(')
identifier ('ret')
, (',')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"Create student table"')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// Inserts data to the table using the update operation.')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"\nThe update operation - Inserting data to a table"')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('ret')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('testDB')
-> ('->')
identifier ('update')
( ('(')
QUOTED_STRING_LITERAL ('"INSERT INTO student(age, name)\n                          values (23, 'john')"')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('handleUpdate')
( ('(')
identifier ('ret')
, (',')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"Insert to student table with no parameters"')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// Select data using the `select` operation.')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"\nThe select operation - Select data from a table"')
) (')')
; (';')
WHITE_SPACE ('\n    ')
var ('var')
WHITE_SPACE (' ')
identifier ('selectRet')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('testDB')
-> ('->')
identifier ('select')
( ('(')
QUOTED_STRING_LITERAL ('"SELECT * FROM student"')
, (',')
WHITE_SPACE (' ')
( ('(')
) (')')
) (')')
; (';')
WHITE_SPACE ('\n    ')
table ('table')
WHITE_SPACE (' ')
identifier ('dt')
; (';')
WHITE_SPACE ('\n    ')
match ('match')
WHITE_SPACE (' ')
identifier ('selectRet')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
table ('table')
WHITE_SPACE (' ')
identifier ('tableReturned')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
identifier ('dt')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('tableReturned')
; (';')
WHITE_SPACE ('\n        ')
identifier ('error')
WHITE_SPACE (' ')
identifier ('e')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Select data from student table failed: "')
WHITE_SPACE ('\n                               ')
+ ('+')
WHITE_SPACE (' ')
identifier ('e')
. ('.')
identifier ('message')
) (')')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// Convert a table to JSON.')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"\nConvert the table into json"')
) (')')
; (';')
WHITE_SPACE ('\n    ')
var ('var')
WHITE_SPACE (' ')
identifier ('jsonConversionRet')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
< ('<')
json ('json')
> ('>')
identifier ('dt')
; (';')
WHITE_SPACE ('\n    ')
match ('match')
WHITE_SPACE (' ')
identifier ('jsonConversionRet')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
json ('json')
WHITE_SPACE (' ')
identifier ('jsonRes')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n            ')
identifier ('io')
: (':')
identifier ('print')
( ('(')
QUOTED_STRING_LITERAL ('"JSON: "')
) (')')
; (';')
WHITE_SPACE ('\n            ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
identifier ('io')
: (':')
identifier ('sprintf')
( ('(')
QUOTED_STRING_LITERAL ('"%s"')
, (',')
WHITE_SPACE (' ')
identifier ('jsonRes')
) (')')
) (')')
; (';')
WHITE_SPACE ('\n        ')
} ('}')
WHITE_SPACE ('\n        ')
identifier ('error')
WHITE_SPACE (' ')
identifier ('e')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Error in table to json conversion"')
) (')')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// Drop the STUDENT table.')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"\nThe update operation - Drop student table"')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('ret')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('testDB')
-> ('->')
identifier ('update')
( ('(')
QUOTED_STRING_LITERAL ('"DROP TABLE student"')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('handleUpdate')
( ('(')
identifier ('ret')
, (',')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"Drop table student"')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// Finally, close the connection pool.')
WHITE_SPACE ('\n    ')
identifier ('testDB')
. ('.')
identifier ('stop')
( ('(')
) (')')
; (';')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// Function to handle return of the update operation.')
WHITE_SPACE ('\n')
function ('function')
WHITE_SPACE (' ')
identifier ('handleUpdate')
( ('(')
int ('int')
| ('|')
identifier ('error')
WHITE_SPACE (' ')
identifier ('returned')
, (',')
WHITE_SPACE (' ')
string ('string')
WHITE_SPACE (' ')
identifier ('message')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
match ('match')
WHITE_SPACE (' ')
identifier ('returned')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
int ('int')
WHITE_SPACE (' ')
identifier ('retInt')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
identifier ('message')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('" status: "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
identifier ('retInt')
) (')')
; (';')
WHITE_SPACE ('\n        ')
identifier ('error')
WHITE_SPACE (' ')
identifier ('e')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
identifier ('message')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('" failed: "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
identifier ('e')
. ('.')
identifier ('message')
) (')')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n')
} ('}')
