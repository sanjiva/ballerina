import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('http')
; (';')
WHITE_SPACE ('\n')
import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('mime')
; (';')
WHITE_SPACE ('\n')
import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('io')
; (';')
WHITE_SPACE ('\n\n')
type ('type')
WHITE_SPACE (' ')
identifier ('ProductMaterial')
WHITE_SPACE (' ')
record ('record')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
string ('string')
WHITE_SPACE (' ')
identifier ('name')
; (';')
WHITE_SPACE ('\n    ')
float ('float')
WHITE_SPACE (' ')
identifier ('amount')
; (';')
WHITE_SPACE ('\n')
} ('}')
; (';')
WHITE_SPACE ('\n\n')
type ('type')
WHITE_SPACE (' ')
identifier ('MaterialUsage')
WHITE_SPACE (' ')
record ('record')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
string ('string')
WHITE_SPACE (' ')
identifier ('name')
; (';')
WHITE_SPACE ('\n    ')
float ('float')
WHITE_SPACE (' ')
identifier ('totalRawMaterial')
; (';')
WHITE_SPACE ('\n    ')
float ('float')
WHITE_SPACE (' ')
identifier ('totalConsumption')
; (';')
WHITE_SPACE ('\n')
} ('}')
; (';')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// These are the input streams that use `ProductMaterial` as the constraint type.')
WHITE_SPACE ('\n')
stream ('stream')
< ('<')
identifier ('ProductMaterial')
> ('>')
WHITE_SPACE (' ')
identifier ('rawMaterialStream')
; (';')
WHITE_SPACE ('\n')
stream ('stream')
< ('<')
identifier ('ProductMaterial')
> ('>')
WHITE_SPACE (' ')
identifier ('productionInputStream')
; (';')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// This is the output stream that contains the events/alerts that are generated based on streaming logic.')
WHITE_SPACE ('\n')
stream ('stream')
< ('<')
identifier ('MaterialUsage')
> ('>')
WHITE_SPACE (' ')
identifier ('materialUsageStream')
; (';')
WHITE_SPACE ('\n\n')
function ('function')
WHITE_SPACE (' ')
identifier ('initRealtimeProductionAlert')
( ('(')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// Whenever the `materialUsageStream` stream receives an event from the streaming rules defined in the `forever`')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// block, the `printMaterialUsageAlert` function is invoked.')
WHITE_SPACE ('\n    ')
identifier ('materialUsageStream')
. ('.')
identifier ('subscribe')
( ('(')
identifier ('printMaterialUsageAlert')
) (')')
; (';')
WHITE_SPACE ('\n\n\n    ')
LINE_COMMENT ('// Gather events related to raw materials through the `rawMaterialStream` stream and production related events')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// through the `productionInputStream`. The raw materials usage and production outcome for the last')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// 10 seconds are calculated and an alert is triggered if the raw material usage is 5% higher than the')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// production outcome. This `forever` block is executed once, when initializing the service. The processing happens')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// asynchronously each time the `requestStream` or `productionInputStream` receives an event.')
WHITE_SPACE ('\n    ')
forever ('forever')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
from ('from')
WHITE_SPACE (' ')
identifier ('productionInputStream')
WHITE_SPACE (' ')
window ('window')
WHITE_SPACE (' ')
identifier ('time')
( ('(')
DECIMAL_INTEGER_LITERAL ('10000')
) (')')
WHITE_SPACE (' ')
as ('as')
WHITE_SPACE (' ')
identifier ('p')
WHITE_SPACE ('\n        ')
join ('join')
WHITE_SPACE (' ')
identifier ('rawMaterialStream')
WHITE_SPACE (' ')
window ('window')
WHITE_SPACE (' ')
identifier ('time')
( ('(')
DECIMAL_INTEGER_LITERAL ('10000')
) (')')
WHITE_SPACE (' ')
as ('as')
WHITE_SPACE (' ')
identifier ('r')
WHITE_SPACE ('\n        ')
on ('on')
WHITE_SPACE (' ')
identifier ('r')
. ('.')
identifier ('name')
WHITE_SPACE (' ')
== ('==')
WHITE_SPACE (' ')
identifier ('p')
. ('.')
identifier ('name')
WHITE_SPACE ('\n        ')
select ('select')
WHITE_SPACE (' ')
identifier ('r')
. ('.')
identifier ('name')
, (',')
WHITE_SPACE (' ')
identifier ('sum')
( ('(')
identifier ('r')
. ('.')
identifier ('amount')
) (')')
WHITE_SPACE (' ')
as ('as')
WHITE_SPACE (' ')
identifier ('totalRawMaterial')
, (',')
WHITE_SPACE ('\n                ')
identifier ('sum')
( ('(')
identifier ('p')
. ('.')
identifier ('amount')
) (')')
WHITE_SPACE (' ')
as ('as')
WHITE_SPACE (' ')
identifier ('totalConsumption')
WHITE_SPACE ('\n        ')
group ('group')
WHITE_SPACE (' ')
by ('by')
WHITE_SPACE (' ')
identifier ('r')
. ('.')
identifier ('name')
WHITE_SPACE ('\n        ')
having ('having')
WHITE_SPACE (' ')
( ('(')
( ('(')
identifier ('totalRawMaterial')
WHITE_SPACE (' ')
- ('-')
WHITE_SPACE (' ')
identifier ('totalConsumption')
) (')')
WHITE_SPACE (' ')
* ('*')
WHITE_SPACE (' ')
FLOATING_POINT_LITERAL ('100.0')
WHITE_SPACE (' ')
/ ('/')
WHITE_SPACE ('\n                ')
identifier ('totalRawMaterial')
) (')')
WHITE_SPACE (' ')
> ('>')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('5')
WHITE_SPACE ('\n        ')
=> ('=>')
WHITE_SPACE (' ')
( ('(')
identifier ('MaterialUsage')
[ ('[')
] (']')
WHITE_SPACE (' ')
identifier ('materialUsages')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
LINE_COMMENT ('// `materialUsages` is the output that matches the defined streaming rules. It is published to the `materialUsageStream` stream.')
WHITE_SPACE ('\n        ')
LINE_COMMENT ('// The selected clause should match the structure of the `MaterialUsage` type.')
WHITE_SPACE ('\n            ')
identifier ('materialUsageStream')
. ('.')
identifier ('publish')
( ('(')
identifier ('materialUsages')
) (')')
; (';')
WHITE_SPACE ('\n        ')
} ('}')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE ('\n\n')
function ('function')
WHITE_SPACE (' ')
identifier ('printMaterialUsageAlert')
( ('(')
identifier ('MaterialUsage')
WHITE_SPACE (' ')
identifier ('materialUsage')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n\n    ')
float ('float')
WHITE_SPACE (' ')
identifier ('materialUsageDifference')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
( ('(')
identifier ('materialUsage')
. ('.')
identifier ('totalRawMaterial')
WHITE_SPACE (' ')
- ('-')
WHITE_SPACE ('\n            ')
identifier ('materialUsage')
. ('.')
identifier ('totalConsumption')
) (')')
WHITE_SPACE (' ')
* ('*')
WHITE_SPACE (' ')
FLOATING_POINT_LITERAL ('100.0')
WHITE_SPACE (' ')
/ ('/')
WHITE_SPACE ('\n                ')
( ('(')
identifier ('materialUsage')
. ('.')
identifier ('totalRawMaterial')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"ALERT!! : Material usage is higher than the expected"')
WHITE_SPACE ('\n            ')
+ ('+')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('" limit for material : "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
identifier ('materialUsage')
. ('.')
identifier ('name')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE ('\n            ')
QUOTED_STRING_LITERAL ('" , usage difference (%) : "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
identifier ('materialUsageDifference')
) (')')
; (';')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE ('\n\n')
endpoint ('endpoint')
WHITE_SPACE (' ')
identifier ('http')
: (':')
identifier ('Listener')
WHITE_SPACE (' ')
identifier ('productMaterialListener')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
identifier ('port')
: (':')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('9090')
WHITE_SPACE ('\n')
} ('}')
; (';')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// The service, which receives events related to the production outcome and the raw material input.')
WHITE_SPACE ('\n')
@ ('@')
identifier ('http')
: (':')
identifier ('ServiceConfig')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
identifier ('basePath')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"/"')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE ('\n')
service ('service')
WHITE_SPACE (' ')
identifier ('productMaterialService')
WHITE_SPACE (' ')
bind ('bind')
WHITE_SPACE (' ')
identifier ('productMaterialListener')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// Initialize the function that contains streaming queries.')
WHITE_SPACE ('\n    ')
future ('future')
WHITE_SPACE (' ')
identifier ('ftr')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
start ('start')
WHITE_SPACE (' ')
identifier ('initRealtimeProductionAlert')
( ('(')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
@ ('@')
identifier ('http')
: (':')
identifier ('ResourceConfig')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('methods')
: (':')
WHITE_SPACE (' ')
[ ('[')
QUOTED_STRING_LITERAL ('"POST"')
] (']')
, (',')
WHITE_SPACE ('\n        ')
identifier ('path')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"/rawmaterial"')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n    ')
identifier ('rawmaterialrequests')
( ('(')
endpoint ('endpoint')
WHITE_SPACE (' ')
identifier ('outboundEP')
, (',')
WHITE_SPACE (' ')
identifier ('http')
: (':')
identifier ('Request')
WHITE_SPACE (' ')
identifier ('req')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
var ('var')
WHITE_SPACE (' ')
identifier ('jsonMsg')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('req')
. ('.')
identifier ('getJsonPayload')
( ('(')
) (')')
; (';')
WHITE_SPACE ('\n        ')
match ('match')
WHITE_SPACE (' ')
identifier ('jsonMsg')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n            ')
json ('json')
WHITE_SPACE (' ')
identifier ('msg')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n                ')
var ('var')
WHITE_SPACE (' ')
identifier ('productMaterial')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
check ('check')
WHITE_SPACE (' ')
< ('<')
identifier ('ProductMaterial')
> ('>')
identifier ('msg')
; (';')
WHITE_SPACE ('\n                ')
identifier ('rawMaterialStream')
. ('.')
identifier ('publish')
( ('(')
identifier ('productMaterial')
) (')')
; (';')
WHITE_SPACE ('\n\n                ')
identifier ('http')
: (':')
identifier ('Response')
WHITE_SPACE (' ')
identifier ('res')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
new ('new')
; (';')
WHITE_SPACE ('\n                ')
identifier ('res')
. ('.')
identifier ('setJsonPayload')
( ('(')
{ ('{')
QUOTED_STRING_LITERAL ('"message"')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"Raw material request"')
WHITE_SPACE ('\n                                        ')
+ ('+')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('" successfully received"')
} ('}')
) (')')
; (';')
WHITE_SPACE ('\n                ')
identifier ('_')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('outboundEP')
-> ('->')
identifier ('respond')
( ('(')
identifier ('res')
) (')')
; (';')
WHITE_SPACE ('\n\n            ')
} ('}')
WHITE_SPACE ('\n            ')
identifier ('error')
WHITE_SPACE (' ')
identifier ('err')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n                ')
identifier ('http')
: (':')
identifier ('Response')
WHITE_SPACE (' ')
identifier ('res')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
new ('new')
; (';')
WHITE_SPACE ('\n                ')
identifier ('res')
. ('.')
identifier ('statusCode')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('500')
; (';')
WHITE_SPACE ('\n                ')
identifier ('res')
. ('.')
identifier ('setPayload')
( ('(')
untaint ('untaint')
WHITE_SPACE (' ')
identifier ('err')
. ('.')
identifier ('message')
) (')')
; (';')
WHITE_SPACE ('\n                ')
identifier ('_')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('outboundEP')
-> ('->')
identifier ('respond')
( ('(')
identifier ('res')
) (')')
; (';')
WHITE_SPACE ('\n            ')
} ('}')
WHITE_SPACE ('\n        ')
} ('}')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n\n    ')
@ ('@')
identifier ('http')
: (':')
identifier ('ResourceConfig')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('methods')
: (':')
WHITE_SPACE (' ')
[ ('[')
QUOTED_STRING_LITERAL ('"POST"')
] (']')
, (',')
WHITE_SPACE ('\n        ')
identifier ('path')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"/productionmaterial"')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n    ')
identifier ('productionmaterialrequests')
( ('(')
endpoint ('endpoint')
WHITE_SPACE (' ')
identifier ('outboundEP')
, (',')
WHITE_SPACE ('\n                               ')
identifier ('http')
: (':')
identifier ('Request')
WHITE_SPACE (' ')
identifier ('req')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
var ('var')
WHITE_SPACE (' ')
identifier ('jsonMsg')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('req')
. ('.')
identifier ('getJsonPayload')
( ('(')
) (')')
; (';')
WHITE_SPACE ('\n        ')
match ('match')
WHITE_SPACE (' ')
identifier ('jsonMsg')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n            ')
json ('json')
WHITE_SPACE (' ')
identifier ('msg')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n                ')
var ('var')
WHITE_SPACE (' ')
identifier ('productMaterial')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
check ('check')
WHITE_SPACE (' ')
< ('<')
identifier ('ProductMaterial')
> ('>')
identifier ('msg')
; (';')
WHITE_SPACE ('\n                ')
identifier ('productionInputStream')
. ('.')
identifier ('publish')
( ('(')
identifier ('productMaterial')
) (')')
; (';')
WHITE_SPACE ('\n\n                ')
identifier ('http')
: (':')
identifier ('Response')
WHITE_SPACE (' ')
identifier ('res')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
new ('new')
; (';')
WHITE_SPACE ('\n                ')
identifier ('res')
. ('.')
identifier ('setJsonPayload')
( ('(')
{ ('{')
QUOTED_STRING_LITERAL ('"message"')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"Production input "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE ('\n                                    ')
QUOTED_STRING_LITERAL ('"request successfully received"')
} ('}')
) (')')
; (';')
WHITE_SPACE ('\n                ')
identifier ('_')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('outboundEP')
-> ('->')
identifier ('respond')
( ('(')
identifier ('res')
) (')')
; (';')
WHITE_SPACE ('\n\n            ')
} ('}')
WHITE_SPACE ('\n            ')
identifier ('error')
WHITE_SPACE (' ')
identifier ('err')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n                ')
identifier ('http')
: (':')
identifier ('Response')
WHITE_SPACE (' ')
identifier ('res')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
new ('new')
; (';')
WHITE_SPACE ('\n                ')
identifier ('res')
. ('.')
identifier ('statusCode')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('500')
; (';')
WHITE_SPACE ('\n                ')
identifier ('res')
. ('.')
identifier ('setPayload')
( ('(')
untaint ('untaint')
WHITE_SPACE (' ')
identifier ('err')
. ('.')
identifier ('message')
) (')')
; (';')
WHITE_SPACE ('\n                ')
identifier ('_')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('outboundEP')
-> ('->')
identifier ('respond')
( ('(')
identifier ('res')
) (')')
; (';')
WHITE_SPACE ('\n            ')
} ('}')
WHITE_SPACE ('\n        ')
} ('}')
WHITE_SPACE ('\n\n    ')
} ('}')
WHITE_SPACE ('\n')
} ('}')
