import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('io')
; (';')
WHITE_SPACE ('\n\n')
function ('function')
WHITE_SPACE (' ')
identifier ('main')
( ('(')
string ('string')
... ('...')
WHITE_SPACE (' ')
identifier ('args')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// This creates an XML and associates it with a variable.')
WHITE_SPACE ('\n    ')
var ('var')
WHITE_SPACE (' ')
identifier ('x')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
XML_LITERAL_START ('xml `')
XML_TAG_OPEN ('<')
XML_QNAME ('h')
QNAME_SEPARATOR (':')
XML_QNAME ('Store')
XML_QNAME (' id')
EQUALS (' =')
DOUBLE_QUOTE (' "')
XML_DOUBLE_QUOTED_STRING_SEQUENCE ('AST')
DOUBLE_QUOTE_END ('"')
XML_QNAME (' xmlns')
QNAME_SEPARATOR (':')
XML_QNAME ('h')
EQUALS ('=')
DOUBLE_QUOTE ('"')
XML_DOUBLE_QUOTED_STRING_SEQUENCE ('http://www.test.com')
DOUBLE_QUOTE_END ('"')
XML_TAG_CLOSE ('>')
XML_TEXT_SEQUENCE ('\n                     ')
XML_TAG_OPEN ('<')
XML_QNAME ('h')
QNAME_SEPARATOR (':')
XML_QNAME ('name')
XML_TAG_CLOSE ('>')
XML_TEXT_SEQUENCE ('Anne')
XML_TAG_OPEN_SLASH ('</')
XML_QNAME ('h')
QNAME_SEPARATOR (':')
XML_QNAME ('name')
XML_TAG_CLOSE ('>')
XML_TEXT_SEQUENCE ('\n                     ')
XML_TAG_OPEN ('<')
XML_QNAME ('h')
QNAME_SEPARATOR (':')
XML_QNAME ('address')
XML_TAG_CLOSE ('>')
XML_TAG_OPEN ('<')
XML_QNAME ('h')
QNAME_SEPARATOR (':')
XML_QNAME ('street')
XML_TAG_CLOSE ('>')
XML_TEXT_SEQUENCE ('Main')
XML_TAG_OPEN_SLASH ('</')
XML_QNAME ('h')
QNAME_SEPARATOR (':')
XML_QNAME ('street')
XML_TAG_CLOSE ('>')
XML_TEXT_SEQUENCE ('\n                     ')
XML_TAG_OPEN ('<')
XML_QNAME ('h')
QNAME_SEPARATOR (':')
XML_QNAME ('city')
XML_TAG_CLOSE ('>')
XML_TEXT_SEQUENCE ('94')
XML_TAG_OPEN_SLASH ('</')
XML_QNAME ('h')
QNAME_SEPARATOR (':')
XML_QNAME ('city')
XML_TAG_CLOSE ('>')
XML_TAG_OPEN_SLASH ('</')
XML_QNAME ('h')
QNAME_SEPARATOR (':')
XML_QNAME ('address')
XML_TAG_CLOSE ('>')
XML_TEXT_SEQUENCE ('\n                     ')
XML_TAG_OPEN ('<')
XML_QNAME ('h')
QNAME_SEPARATOR (':')
XML_QNAME ('code')
XML_TAG_CLOSE ('>')
XML_TAG_OPEN ('<')
XML_QNAME ('h')
QNAME_SEPARATOR (':')
XML_QNAME ('item')
XML_TAG_CLOSE ('>')
XML_TEXT_SEQUENCE ('4')
XML_TAG_OPEN_SLASH ('</')
XML_QNAME ('h')
QNAME_SEPARATOR (':')
XML_QNAME ('item')
XML_TAG_CLOSE ('>')
XML_TAG_OPEN ('<')
XML_QNAME ('h')
QNAME_SEPARATOR (':')
XML_QNAME ('item')
XML_TAG_CLOSE ('>')
XML_TEXT_SEQUENCE ('8')
XML_TAG_OPEN_SLASH ('</')
XML_QNAME ('h')
QNAME_SEPARATOR (':')
XML_QNAME ('item')
XML_TAG_CLOSE ('>')
XML_TAG_OPEN_SLASH ('</')
XML_QNAME ('h')
QNAME_SEPARATOR (':')
XML_QNAME ('code')
XML_TAG_CLOSE ('>')
XML_TEXT_SEQUENCE ('\n                     ')
XML_TAG_OPEN_SLASH ('</')
XML_QNAME ('h')
QNAME_SEPARATOR (':')
XML_QNAME ('Store')
XML_TAG_CLOSE ('>')
XML_LITERAL_END ('`')
; (';')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// This converts the XML to JSON with namespaces and the default 'attributePrefix'.')
WHITE_SPACE ('\n    ')
json ('json')
WHITE_SPACE (' ')
identifier ('j1')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('x')
. ('.')
identifier ('toJSON')
( ('(')
{ ('{')
} ('}')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
identifier ('j1')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// This converts the XML to JSON without namespaces and with a custom 'attributePrefix'.')
WHITE_SPACE ('\n    ')
json ('json')
WHITE_SPACE (' ')
identifier ('j2')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('x')
. ('.')
identifier ('toJSON')
( ('(')
{ ('{')
WHITE_SPACE (' ')
identifier ('attributePrefix')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"#"')
, (',')
WHITE_SPACE (' ')
identifier ('preserveNamespaces')
: (':')
WHITE_SPACE (' ')
BOOLEAN_LITERAL ('false')
WHITE_SPACE (' ')
} ('}')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
identifier ('j2')
) (')')
; (';')
WHITE_SPACE ('\n')
} ('}')
