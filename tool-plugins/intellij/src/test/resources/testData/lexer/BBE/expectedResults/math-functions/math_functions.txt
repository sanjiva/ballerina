import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('io')
; (';')
WHITE_SPACE ('\n')
import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('math')
; (';')
WHITE_SPACE ('\n\n')
function ('function')
WHITE_SPACE (' ')
identifier ('main')
( ('(')
string ('string')
... ('...')
WHITE_SPACE (' ')
identifier ('args')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Value of PI : "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
identifier ('math')
: (':')
identifier ('PI')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Value of E  : "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
identifier ('math')
: (':')
identifier ('E')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('//This returns the absolute value of a float value.')
WHITE_SPACE ('\n    ')
float ('float')
WHITE_SPACE (' ')
identifier ('absoluteFloatValue')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('math')
: (':')
identifier ('absFloat')
( ('(')
- ('-')
FLOATING_POINT_LITERAL ('152.2544')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Absolute value of -152.2544 : "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
identifier ('absoluteFloatValue')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('//This returns the absolute value of an int value.')
WHITE_SPACE ('\n    ')
int ('int')
WHITE_SPACE (' ')
identifier ('absoluteIntValue')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('math')
: (':')
identifier ('absInt')
( ('(')
- ('-')
DECIMAL_INTEGER_LITERAL ('152')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Absolute value of -152      : "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
identifier ('absoluteIntValue')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('//This returns the arc cosine of a value.')
WHITE_SPACE ('\n    ')
float ('float')
WHITE_SPACE (' ')
identifier ('acosValue')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('math')
: (':')
identifier ('acos')
( ('(')
FLOATING_POINT_LITERAL ('0.027415567780803774')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Arc cosine of 0.027415567780803774  : "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
identifier ('acosValue')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('//This returns the arc sine of a value.')
WHITE_SPACE ('\n    ')
float ('float')
WHITE_SPACE (' ')
identifier ('arcSineValue')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('math')
: (':')
identifier ('asin')
( ('(')
FLOATING_POINT_LITERAL ('0.027415567780803774')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Arc sine of 0.027415567780803774    : "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
identifier ('arcSineValue')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('//This returns the arc tangent of a value.')
WHITE_SPACE ('\n    ')
float ('float')
WHITE_SPACE (' ')
identifier ('arcTangent')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('math')
: (':')
identifier ('atan')
( ('(')
FLOATING_POINT_LITERAL ('0.027415567780803774')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Arc tangent of 0.027415567780803774 : "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
identifier ('arcTangent')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('//This returns the cube root of a float value.')
WHITE_SPACE ('\n    ')
float ('float')
WHITE_SPACE (' ')
identifier ('cubeRoot')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('math')
: (':')
identifier ('cbrt')
( ('(')
- ('-')
DECIMAL_INTEGER_LITERAL ('27')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Cube root of 0.027415567780803774   : "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
identifier ('cubeRoot')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('//There are over 40 methods in the ballerina math API that can be used to perform numeric operations.')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('//You can find them in the 'ballerina.math' package.')
WHITE_SPACE ('\n')
} ('}')
