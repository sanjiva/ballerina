import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('io')
; (';')
WHITE_SPACE ('\n\n')
type ('type')
WHITE_SPACE (' ')
identifier ('Record')
WHITE_SPACE (' ')
record ('record')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
int ('int')
WHITE_SPACE (' ')
identifier ('id')
; (';')
WHITE_SPACE ('\n    ')
string ('string')
WHITE_SPACE (' ')
identifier ('name')
; (';')
WHITE_SPACE ('\n')
} ('}')
; (';')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// This example demonstrates throwing an error. The next example demonstrates how to catch the thrown errors.')
WHITE_SPACE ('\n')
function ('function')
WHITE_SPACE (' ')
identifier ('readRecord')
( ('(')
identifier ('Record')
| ('|')
( ('(')
) (')')
WHITE_SPACE (' ')
identifier ('value')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
match ('match')
WHITE_SPACE (' ')
identifier ('value')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('Record')
WHITE_SPACE (' ')
identifier ('rec')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n            ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Record ID: "')
, (',')
WHITE_SPACE (' ')
identifier ('rec')
. ('.')
identifier ('id')
, (',')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('", value: "')
, (',')
WHITE_SPACE (' ')
identifier ('rec')
. ('.')
identifier ('name')
) (')')
; (';')
WHITE_SPACE ('\n        ')
} ('}')
WHITE_SPACE ('\n        ')
( ('(')
any ('any')
| ('|')
( ('(')
) (')')
) (')')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n            ')
identifier ('error')
WHITE_SPACE (' ')
identifier ('err')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
identifier ('message')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"Record is null"')
WHITE_SPACE (' ')
} ('}')
; (';')
WHITE_SPACE ('\n            ')
throw ('throw')
WHITE_SPACE (' ')
identifier ('err')
; (';')
WHITE_SPACE ('\n        ')
} ('}')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE ('\n')
LINE_COMMENT ('// Catch a thrown error. ')
WHITE_SPACE ('\n')
function ('function')
WHITE_SPACE (' ')
identifier ('main')
( ('(')
string ('string')
... ('...')
WHITE_SPACE (' ')
identifier ('args')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
identifier ('Record')
WHITE_SPACE (' ')
identifier ('r1')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
identifier ('id')
: (':')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('1')
, (',')
WHITE_SPACE (' ')
identifier ('name')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"record1"')
WHITE_SPACE (' ')
} ('}')
; (';')
WHITE_SPACE ('\n    ')
identifier ('readRecord')
( ('(')
identifier ('r1')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('Record')
| ('|')
( ('(')
) (')')
WHITE_SPACE (' ')
identifier ('r2')
; (';')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// Record r2 is null.')
WHITE_SPACE ('\n    ')
match ('match')
WHITE_SPACE (' ')
identifier ('r2')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('Record')
WHITE_SPACE (' ')
identifier ('rec')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n            ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Record: "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
identifier ('rec')
. ('.')
identifier ('name')
) (')')
; (';')
WHITE_SPACE ('\n        ')
} ('}')
WHITE_SPACE ('\n        ')
( ('(')
any ('any')
| ('|')
( ('(')
) (')')
) (')')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n            ')
identifier ('readRecord')
( ('(')
identifier ('r2')
) (')')
; (';')
WHITE_SPACE ('\n        ')
} ('}')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// The following lines of code will not be executed.')
WHITE_SPACE ('\n    ')
identifier ('Record')
WHITE_SPACE (' ')
identifier ('r3')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
identifier ('id')
: (':')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('3')
, (',')
WHITE_SPACE (' ')
identifier ('name')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"record3"')
WHITE_SPACE (' ')
} ('}')
; (';')
WHITE_SPACE ('\n    ')
identifier ('readRecord')
( ('(')
identifier ('r3')
) (')')
; (';')
WHITE_SPACE ('\n')
} ('}')
