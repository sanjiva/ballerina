import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('io')
; (';')
WHITE_SPACE ('\n\n')
function ('function')
WHITE_SPACE (' ')
identifier ('main')
( ('(')
string ('string')
... ('...')
WHITE_SPACE (' ')
identifier ('args')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// This creates an integer array with several integer elements.')
WHITE_SPACE ('\n    ')
int ('int')
[ ('[')
] (']')
WHITE_SPACE (' ')
identifier ('intArray')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
[ ('[')
DECIMAL_INTEGER_LITERAL ('1')
, (',')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('2')
, (',')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('3')
] (']')
; (';')
WHITE_SPACE ('\n    ')
int ('int')
WHITE_SPACE (' ')
identifier ('length')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// This prints the length of the integer array created. The length is calculated using the `lengthof` unary operator.')
WHITE_SPACE ('\n    ')
identifier ('length')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
lengthof ('lengthof')
WHITE_SPACE (' ')
identifier ('intArray')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Integer array size: "')
, (',')
WHITE_SPACE (' ')
identifier ('length')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// This creates a JSON array with several JSON elements.')
WHITE_SPACE ('\n    ')
json ('json')
WHITE_SPACE (' ')
identifier ('jsonArray')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
[ ('[')
WHITE_SPACE ('\n        ')
{ ('{')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"name"')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"John"')
, (',')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"age"')
: (':')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('31')
WHITE_SPACE (' ')
} ('}')
, (',')
WHITE_SPACE ('\n        ')
{ ('{')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"name"')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"Neal"')
, (',')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"age"')
: (':')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('22')
WHITE_SPACE (' ')
} ('}')
WHITE_SPACE ('\n    ')
] (']')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// This prints the length of the created JSON array.')
WHITE_SPACE ('\n    ')
identifier ('length')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
lengthof ('lengthof')
WHITE_SPACE (' ')
identifier ('jsonArray')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"JSON array size: "')
, (',')
WHITE_SPACE (' ')
identifier ('length')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// This creates an `int` constrained map.')
WHITE_SPACE ('\n    ')
map ('map')
< ('<')
int ('int')
> ('>')
WHITE_SPACE (' ')
identifier ('strMap')
; (';')
WHITE_SPACE ('\n    ')
identifier ('strMap')
[ ('[')
QUOTED_STRING_LITERAL ('"A"')
] (']')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('1')
; (';')
WHITE_SPACE ('\n    ')
identifier ('strMap')
[ ('[')
QUOTED_STRING_LITERAL ('"B"')
] (']')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('2')
; (';')
WHITE_SPACE ('\n    ')
identifier ('strMap')
[ ('[')
QUOTED_STRING_LITERAL ('"C"')
] (']')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('3')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// This prints the length of the created map.')
WHITE_SPACE ('\n    ')
identifier ('length')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
lengthof ('lengthof')
WHITE_SPACE (' ')
identifier ('strMap')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Map size: "')
, (',')
WHITE_SPACE (' ')
identifier ('length')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// This creates a string.')
WHITE_SPACE ('\n    ')
string ('string')
WHITE_SPACE (' ')
identifier ('myStr')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"My name is Peter Parker"')
; (';')
WHITE_SPACE ('\n    \n    ')
LINE_COMMENT ('// This prints the length of the string.')
WHITE_SPACE ('\n    ')
identifier ('length')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
lengthof ('lengthof')
WHITE_SPACE (' ')
identifier ('myStr')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"String size: "')
, (',')
WHITE_SPACE (' ')
identifier ('length')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
xml ('xml')
WHITE_SPACE (' ')
identifier ('x1')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
XML_LITERAL_START ('xml `')
XML_TAG_OPEN ('<')
XML_QNAME ('book')
XML_TAG_CLOSE ('>')
XML_TEXT_SEQUENCE ('\n                    ')
XML_TAG_OPEN ('<')
XML_QNAME ('name')
XML_TAG_CLOSE ('>')
XML_TEXT_SEQUENCE ('Sherlock Holmes')
XML_TAG_OPEN_SLASH ('</')
XML_QNAME ('name')
XML_TAG_CLOSE ('>')
XML_TEXT_SEQUENCE ('\n                    ')
XML_TAG_OPEN ('<')
XML_QNAME ('author')
XML_TAG_CLOSE ('>')
XML_TEXT_SEQUENCE ('Sir Arthur Conan Doyle')
XML_TAG_OPEN_SLASH ('</')
XML_QNAME ('author')
XML_TAG_CLOSE ('>')
XML_TEXT_SEQUENCE ('\n                    ')
XML_COMMENT_START ('<!--')
XML_COMMENT_TEXT ('Price: $10-->')
XML_TEXT_SEQUENCE ('\n                  ')
XML_TAG_OPEN_SLASH ('</')
XML_QNAME ('book')
XML_TAG_CLOSE ('>')
XML_LITERAL_END ('`')
; (';')
WHITE_SPACE ('\n    ')
identifier ('length')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
lengthof ('lengthof')
WHITE_SPACE (' ')
identifier ('x1')
. ('.')
* ('*')
. ('.')
identifier ('elements')
( ('(')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"XML child elements size: "')
, (',')
WHITE_SPACE (' ')
identifier ('length')
) (')')
; (';')
WHITE_SPACE ('\n')
} ('}')