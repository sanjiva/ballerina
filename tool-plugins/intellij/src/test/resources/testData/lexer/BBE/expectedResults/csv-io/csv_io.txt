import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('io')
; (';')
WHITE_SPACE ('\n')
import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('log')
; (';')
WHITE_SPACE ('\n\n')
type ('type')
WHITE_SPACE (' ')
identifier ('Employee')
WHITE_SPACE (' ')
record ('record')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
string ('string')
WHITE_SPACE (' ')
identifier ('id')
, (',')
WHITE_SPACE ('\n    ')
string ('string')
WHITE_SPACE (' ')
identifier ('name')
, (',')
WHITE_SPACE ('\n    ')
float ('float')
WHITE_SPACE (' ')
identifier ('salary')
, (',')
WHITE_SPACE ('\n')
} ('}')
; (';')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// This function reads the next record from the channel.')
WHITE_SPACE ('\n')
function ('function')
WHITE_SPACE (' ')
identifier ('readNext')
( ('(')
identifier ('io')
: (':')
identifier ('CSVChannel')
WHITE_SPACE (' ')
identifier ('channel')
) (')')
WHITE_SPACE (' ')
returns ('returns')
WHITE_SPACE (' ')
string ('string')
[ ('[')
] (']')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
match ('match')
WHITE_SPACE (' ')
identifier ('channel')
. ('.')
identifier ('getNext')
( ('(')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
string ('string')
[ ('[')
] (']')
WHITE_SPACE (' ')
identifier ('records')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n            ')
return ('return')
WHITE_SPACE (' ')
identifier ('records')
; (';')
WHITE_SPACE ('\n        ')
} ('}')
WHITE_SPACE ('\n        ')
identifier ('error')
WHITE_SPACE (' ')
identifier ('err')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n            ')
throw ('throw')
WHITE_SPACE (' ')
identifier ('err')
; (';')
WHITE_SPACE ('\n        ')
} ('}')
WHITE_SPACE ('\n        ')
( ('(')
) (')')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n            ')
identifier ('error')
WHITE_SPACE (' ')
identifier ('e')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
identifier ('message')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"Record channel not initialized properly"')
WHITE_SPACE (' ')
} ('}')
; (';')
WHITE_SPACE ('\n            ')
throw ('throw')
WHITE_SPACE (' ')
identifier ('e')
; (';')
WHITE_SPACE ('\n        ')
} ('}')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// This function reads records one by one and prints the records.')
WHITE_SPACE ('\n')
function ('function')
WHITE_SPACE (' ')
identifier ('process')
( ('(')
identifier ('io')
: (':')
identifier ('CSVChannel')
WHITE_SPACE (' ')
identifier ('channel')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
try ('try')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
LINE_COMMENT ('// Read all the records from the provided file')
WHITE_SPACE ('\n        ')
LINE_COMMENT ('// until there are no more records.')
WHITE_SPACE ('\n        ')
while ('while')
WHITE_SPACE (' ')
( ('(')
identifier ('channel')
. ('.')
identifier ('hasNext')
( ('(')
) (')')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n            ')
LINE_COMMENT ('// Read the records.')
WHITE_SPACE ('\n            ')
string ('string')
[ ('[')
] (']')
WHITE_SPACE (' ')
identifier ('records')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('readNext')
( ('(')
identifier ('channel')
) (')')
; (';')
WHITE_SPACE ('\n            ')
LINE_COMMENT ('// Print the records.')
WHITE_SPACE ('\n            ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
identifier ('records')
) (')')
; (';')
WHITE_SPACE ('\n        ')
} ('}')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE (' ')
catch ('catch')
WHITE_SPACE (' ')
( ('(')
identifier ('error')
WHITE_SPACE (' ')
identifier ('err')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
throw ('throw')
WHITE_SPACE (' ')
identifier ('err')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE ('\n')
LINE_COMMENT ('//Specify the location of the `.CSV` file.')
WHITE_SPACE ('\n')
function ('function')
WHITE_SPACE (' ')
identifier ('main')
( ('(')
string ('string')
... ('...')
WHITE_SPACE (' ')
identifier ('args')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
string ('string')
WHITE_SPACE (' ')
identifier ('srcFileName')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"./files/sample.csv"')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// Open a CSV channel in `write` mode and write some data to')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// ./files/sample.csv for later use.')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// The record separator of the `.CSV` file is a')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// new line, and the field separator is a comma (,).')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('CSVChannel')
WHITE_SPACE (' ')
identifier ('csvChannel')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('io')
: (':')
identifier ('openCsvFile')
( ('(')
identifier ('srcFileName')
, (',')
WHITE_SPACE (' ')
identifier ('mode')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"w"')
) (')')
; (';')
WHITE_SPACE ('\n    ')
string ('string')
[ ('[')
] (']')
[ ('[')
] (']')
WHITE_SPACE (' ')
identifier ('data')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
[ ('[')
[ ('[')
QUOTED_STRING_LITERAL ('"1"')
, (',')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"James"')
, (',')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"10000"')
] (']')
, (',')
WHITE_SPACE (' ')
[ ('[')
QUOTED_STRING_LITERAL ('"2"')
, (',')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"Nathan"')
, (',')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"150000"')
] (']')
, (',')
WHITE_SPACE ('\n    ')
[ ('[')
QUOTED_STRING_LITERAL ('"3"')
, (',')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"Ronald"')
, (',')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"120000"')
] (']')
, (',')
WHITE_SPACE (' ')
[ ('[')
QUOTED_STRING_LITERAL ('"4"')
, (',')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"Roy"')
, (',')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"6000"')
] (']')
, (',')
WHITE_SPACE (' ')
[ ('[')
QUOTED_STRING_LITERAL ('"5"')
, (',')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"Oliver"')
, (',')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"1100000"')
] (']')
] (']')
; (';')
WHITE_SPACE ('\n    ')
identifier ('writeDataToCSVChannel')
( ('(')
identifier ('csvChannel')
, (',')
WHITE_SPACE (' ')
... ('...')
identifier ('data')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('closeCSVChannel')
( ('(')
identifier ('csvChannel')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// Open a CSV channel in `read` mode which is the default mode.')
WHITE_SPACE ('\n    ')
identifier ('csvChannel')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('io')
: (':')
identifier ('openCsvFile')
( ('(')
identifier ('srcFileName')
) (')')
; (';')
WHITE_SPACE ('\n    ')
try ('try')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Start processing the CSV file from "')
, (',')
WHITE_SPACE (' ')
identifier ('srcFileName')
) (')')
; (';')
WHITE_SPACE ('\n        ')
identifier ('process')
( ('(')
identifier ('csvChannel')
) (')')
; (';')
WHITE_SPACE ('\n        ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Processing completed."')
) (')')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE (' ')
catch ('catch')
WHITE_SPACE (' ')
( ('(')
identifier ('error')
WHITE_SPACE (' ')
identifier ('e')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('log')
: (':')
identifier ('printError')
( ('(')
QUOTED_STRING_LITERAL ('"An error occurred while processing the records: "')
, (',')
WHITE_SPACE ('\n            ')
identifier ('err')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('e')
) (')')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE (' ')
finally ('finally')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
LINE_COMMENT ('// Close the CSV channel.')
WHITE_SPACE ('\n        ')
identifier ('closeCSVChannel')
( ('(')
identifier ('csvChannel')
) (')')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// Open a CSV channel in `read` mode which is the default mode.')
WHITE_SPACE ('\n    ')
identifier ('csvChannel')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('io')
: (':')
identifier ('openCsvFile')
( ('(')
identifier ('srcFileName')
) (')')
; (';')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// Read the `.CSV` file as a table.')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Reading  "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
identifier ('srcFileName')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('" as a table"')
) (')')
; (';')
WHITE_SPACE ('\n    ')
match ('match')
WHITE_SPACE (' ')
identifier ('csvChannel')
. ('.')
identifier ('getTable')
( ('(')
identifier ('Employee')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
table ('table')
< ('<')
identifier ('Employee')
> ('>')
WHITE_SPACE (' ')
identifier ('employeeTable')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n            ')
foreach ('foreach')
WHITE_SPACE (' ')
identifier ('rec')
WHITE_SPACE (' ')
in ('in')
WHITE_SPACE (' ')
identifier ('employeeTable')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n                ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
identifier ('rec')
) (')')
; (';')
WHITE_SPACE ('\n            ')
} ('}')
WHITE_SPACE ('\n        ')
} ('}')
WHITE_SPACE ('\n        ')
identifier ('error')
WHITE_SPACE (' ')
identifier ('err')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n            ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
identifier ('err')
. ('.')
identifier ('message')
) (')')
; (';')
WHITE_SPACE ('\n        ')
} ('}')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n    ')
identifier ('closeCSVChannel')
( ('(')
identifier ('csvChannel')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// Writing the a table to a `.CSV` file.')
WHITE_SPACE ('\n    ')
string ('string')
WHITE_SPACE (' ')
identifier ('targetFileName')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"./files/output.csv"')
; (';')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// Opening CSV channel in "write" mode.')
WHITE_SPACE ('\n    ')
identifier ('csvChannel')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('io')
: (':')
identifier ('openCsvFile')
( ('(')
identifier ('targetFileName')
, (',')
WHITE_SPACE (' ')
identifier ('mode')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"w"')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Creating a table and adding data"')
) (')')
; (';')
WHITE_SPACE ('\n    ')
table ('table')
< ('<')
identifier ('Employee')
> ('>')
WHITE_SPACE (' ')
identifier ('employeeTable')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('createTableAndAddData')
( ('(')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Writing the table to "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
identifier ('targetFileName')
) (')')
; (';')
WHITE_SPACE ('\n    ')
foreach ('foreach')
WHITE_SPACE (' ')
identifier ('entry')
WHITE_SPACE (' ')
in ('in')
WHITE_SPACE (' ')
identifier ('employeeTable')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
string ('string')
[ ('[')
] (']')
WHITE_SPACE (' ')
identifier ('rec')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
[ ('[')
identifier ('entry')
. ('.')
identifier ('id')
, (',')
WHITE_SPACE (' ')
identifier ('entry')
. ('.')
identifier ('name')
, (',')
WHITE_SPACE (' ')
< ('<')
string ('string')
> ('>')
identifier ('entry')
. ('.')
identifier ('salary')
] (']')
; (';')
WHITE_SPACE ('\n        ')
identifier ('writeDataToCSVChannel')
( ('(')
identifier ('csvChannel')
, (',')
WHITE_SPACE (' ')
identifier ('rec')
) (')')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n    ')
identifier ('closeCSVChannel')
( ('(')
identifier ('csvChannel')
) (')')
; (';')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// Creates a table and adds some data.')
WHITE_SPACE ('\n')
function ('function')
WHITE_SPACE (' ')
identifier ('createTableAndAddData')
( ('(')
) (')')
WHITE_SPACE (' ')
returns ('returns')
WHITE_SPACE (' ')
table ('table')
< ('<')
identifier ('Employee')
> ('>')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
table ('table')
< ('<')
identifier ('Employee')
> ('>')
WHITE_SPACE (' ')
identifier ('employeeTable')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
table ('table')
{ ('{')
} ('}')
; (';')
WHITE_SPACE ('\n\n    ')
identifier ('Employee')
[ ('[')
] (']')
WHITE_SPACE (' ')
identifier ('employees')
; (';')
WHITE_SPACE ('\n    ')
identifier ('employees')
[ ('[')
DECIMAL_INTEGER_LITERAL ('0')
] (']')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
identifier ('id')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"1"')
, (',')
WHITE_SPACE (' ')
identifier ('name')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"Allen"')
, (',')
WHITE_SPACE (' ')
identifier ('salary')
: (':')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('300000')
WHITE_SPACE (' ')
} ('}')
; (';')
WHITE_SPACE ('\n    ')
identifier ('employees')
[ ('[')
DECIMAL_INTEGER_LITERAL ('1')
] (']')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
identifier ('id')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"2"')
, (',')
WHITE_SPACE (' ')
identifier ('name')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"Wallace"')
, (',')
WHITE_SPACE (' ')
identifier ('salary')
: (':')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('200000')
WHITE_SPACE (' ')
} ('}')
; (';')
WHITE_SPACE ('\n    ')
identifier ('employees')
[ ('[')
DECIMAL_INTEGER_LITERAL ('2')
] (']')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
identifier ('id')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"3"')
, (',')
WHITE_SPACE (' ')
identifier ('name')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"Sheldon"')
, (',')
WHITE_SPACE (' ')
identifier ('salary')
: (':')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('1000000')
WHITE_SPACE (' ')
} ('}')
; (';')
WHITE_SPACE ('\n\n    ')
foreach ('foreach')
WHITE_SPACE (' ')
identifier ('employee')
WHITE_SPACE (' ')
in ('in')
WHITE_SPACE (' ')
identifier ('employees')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
match ('match')
WHITE_SPACE (' ')
identifier ('employeeTable')
. ('.')
identifier ('add')
( ('(')
identifier ('employee')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n            ')
identifier ('error')
WHITE_SPACE (' ')
identifier ('e')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Error occurred while adding data to table "')
, (',')
WHITE_SPACE (' ')
identifier ('e')
) (')')
; (';')
WHITE_SPACE ('\n            ')
( ('(')
) (')')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Successfully added entry to table"')
) (')')
; (';')
WHITE_SPACE ('\n        ')
} ('}')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n    ')
return ('return')
WHITE_SPACE (' ')
identifier ('employeeTable')
; (';')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// Write data to a given CSV Channel.')
WHITE_SPACE ('\n')
function ('function')
WHITE_SPACE (' ')
identifier ('writeDataToCSVChannel')
( ('(')
identifier ('io')
: (':')
identifier ('CSVChannel')
WHITE_SPACE (' ')
identifier ('csvChannel')
, (',')
WHITE_SPACE (' ')
string ('string')
[ ('[')
] (']')
... ('...')
WHITE_SPACE (' ')
identifier ('data')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
foreach ('foreach')
WHITE_SPACE (' ')
identifier ('rec')
WHITE_SPACE (' ')
in ('in')
WHITE_SPACE (' ')
identifier ('data')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
var ('var')
WHITE_SPACE (' ')
identifier ('returnedVal')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('csvChannel')
. ('.')
identifier ('write')
( ('(')
identifier ('rec')
) (')')
; (';')
WHITE_SPACE ('\n        ')
match ('match')
WHITE_SPACE (' ')
identifier ('returnedVal')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n            ')
identifier ('error')
WHITE_SPACE (' ')
identifier ('e')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
identifier ('e')
. ('.')
identifier ('message')
) (')')
; (';')
WHITE_SPACE ('\n            ')
( ('(')
) (')')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Record was successfully written to target file"')
) (')')
; (';')
WHITE_SPACE ('\n        ')
} ('}')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// Close the CSV channel.')
WHITE_SPACE ('\n')
function ('function')
WHITE_SPACE (' ')
identifier ('closeCSVChannel')
( ('(')
identifier ('io')
: (':')
identifier ('CSVChannel')
WHITE_SPACE (' ')
identifier ('csvChannel')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
match ('match')
WHITE_SPACE (' ')
identifier ('csvChannel')
. ('.')
identifier ('close')
( ('(')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('error')
WHITE_SPACE (' ')
identifier ('channelCloseError')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n            ')
identifier ('log')
: (':')
identifier ('printError')
( ('(')
QUOTED_STRING_LITERAL ('"Error occured while closing the channel: "')
, (',')
WHITE_SPACE ('\n                ')
identifier ('err')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('channelCloseError')
) (')')
; (';')
WHITE_SPACE ('\n        ')
} ('}')
WHITE_SPACE ('\n        ')
( ('(')
) (')')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"CSV channel closed successfully."')
) (')')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n')
} ('}')
