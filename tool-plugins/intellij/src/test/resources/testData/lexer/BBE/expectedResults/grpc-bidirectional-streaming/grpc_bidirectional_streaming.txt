LINE_COMMENT ('// This is the server implementation for the bidirectional streaming scenario.')
WHITE_SPACE ('\n')
import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('io')
; (';')
WHITE_SPACE ('\n')
import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('grpc')
; (';')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// The server endpoint configuration.')
WHITE_SPACE ('\n')
endpoint ('endpoint')
WHITE_SPACE (' ')
identifier ('grpc')
: (':')
identifier ('Listener')
WHITE_SPACE (' ')
identifier ('listener')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
identifier ('host')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"localhost"')
, (',')
WHITE_SPACE ('\n    ')
identifier ('port')
: (':')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('9090')
WHITE_SPACE ('\n')
} ('}')
; (';')
WHITE_SPACE ('\n\n')
@ ('@')
identifier ('grpc')
: (':')
identifier ('ServiceConfig')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
identifier ('name')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"chat"')
, (',')
WHITE_SPACE ('\n    ')
identifier ('clientStreaming')
: (':')
WHITE_SPACE (' ')
BOOLEAN_LITERAL ('true')
, (',')
WHITE_SPACE ('\n    ')
identifier ('serverStreaming')
: (':')
WHITE_SPACE (' ')
BOOLEAN_LITERAL ('true')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE ('\n')
service ('service')
WHITE_SPACE (' ')
identifier ('Chat')
WHITE_SPACE (' ')
bind ('bind')
WHITE_SPACE (' ')
identifier ('listener')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
map ('map')
< ('<')
identifier ('grpc')
: (':')
identifier ('Listener')
> ('>')
WHITE_SPACE (' ')
identifier ('consMap')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('//This resource is triggered when a new caller connection is initialized.')
WHITE_SPACE ('\n    ')
identifier ('onOpen')
( ('(')
endpoint ('endpoint')
WHITE_SPACE (' ')
identifier ('caller')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
STRING_TEMPLATE_LITERAL_START ('string `')
STRING_TEMPLATE_EXPRESSION_START ('{{')
identifier ('caller')
. ('.')
identifier ('id')
EXPRESSION_END ('}}')
STRING_TEMPLATE_TEXT (' connected to chat')
STRING_TEMPLATE_LITERAL_END ('`')
) (')')
; (';')
WHITE_SPACE ('\n        ')
identifier ('consMap')
[ ('[')
< ('<')
string ('string')
> ('>')
identifier ('caller')
. ('.')
identifier ('id')
] (']')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('caller')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('//This resource is triggered when the caller sends a request message to the service.')
WHITE_SPACE ('\n    ')
identifier ('onMessage')
( ('(')
endpoint ('endpoint')
WHITE_SPACE (' ')
identifier ('caller')
, (',')
WHITE_SPACE (' ')
identifier ('ChatMessage')
WHITE_SPACE (' ')
identifier ('chatMsg')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
endpoint ('endpoint')
WHITE_SPACE (' ')
identifier ('grpc')
: (':')
identifier ('Listener')
WHITE_SPACE (' ')
identifier ('ep')
; (';')
WHITE_SPACE ('\n        ')
string ('string')
WHITE_SPACE (' ')
identifier ('msg')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
STRING_TEMPLATE_LITERAL_START ('string `')
STRING_TEMPLATE_EXPRESSION_START ('{{')
identifier ('chatMsg')
. ('.')
identifier ('name')
EXPRESSION_END ('}}')
STRING_TEMPLATE_EXPRESSION_START (': {{')
identifier ('chatMsg')
. ('.')
identifier ('message')
EXPRESSION_END ('}}')
STRING_TEMPLATE_LITERAL_END ('`')
; (';')
WHITE_SPACE ('\n        ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
identifier ('msg')
) (')')
; (';')
WHITE_SPACE ('\n        ')
foreach ('foreach')
WHITE_SPACE (' ')
identifier ('id')
, (',')
WHITE_SPACE (' ')
identifier ('con')
WHITE_SPACE (' ')
in ('in')
WHITE_SPACE (' ')
identifier ('consMap')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n            ')
identifier ('ep')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('con')
; (';')
WHITE_SPACE ('\n            ')
identifier ('error')
? ('?')
WHITE_SPACE (' ')
identifier ('err')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('ep')
-> ('->')
identifier ('send')
( ('(')
identifier ('msg')
) (')')
; (';')
WHITE_SPACE ('\n            ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
identifier ('err')
. ('.')
identifier ('message')
WHITE_SPACE (' ')
but ('but')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
( ('(')
) (')')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('""')
WHITE_SPACE (' ')
} ('}')
) (')')
; (';')
WHITE_SPACE ('\n        ')
} ('}')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('//This resource is triggered when the server receives an error message from the caller.')
WHITE_SPACE ('\n    ')
identifier ('onError')
( ('(')
endpoint ('endpoint')
WHITE_SPACE (' ')
identifier ('caller')
, (',')
WHITE_SPACE (' ')
identifier ('error')
WHITE_SPACE (' ')
identifier ('err')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
if ('if')
WHITE_SPACE (' ')
( ('(')
identifier ('err')
WHITE_SPACE (' ')
!= ('!=')
WHITE_SPACE (' ')
( ('(')
) (')')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n            ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Something unexpected happens at server : "')
WHITE_SPACE ('\n                                                                ')
+ ('+')
WHITE_SPACE (' ')
identifier ('err')
. ('.')
identifier ('message')
) (')')
; (';')
WHITE_SPACE ('\n        ')
} ('}')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('//This resource is triggered when the caller sends a notification to the server to indicate that it has finished sending messages.')
WHITE_SPACE ('\n    ')
identifier ('onComplete')
( ('(')
endpoint ('endpoint')
WHITE_SPACE (' ')
identifier ('caller')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
endpoint ('endpoint')
WHITE_SPACE (' ')
identifier ('grpc')
: (':')
identifier ('Listener')
WHITE_SPACE (' ')
identifier ('ep')
; (';')
WHITE_SPACE ('\n        ')
string ('string')
WHITE_SPACE (' ')
identifier ('msg')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
STRING_TEMPLATE_LITERAL_START ('string `')
STRING_TEMPLATE_EXPRESSION_START ('{{')
identifier ('caller')
. ('.')
identifier ('id')
EXPRESSION_END ('}}')
STRING_TEMPLATE_TEXT (' left the chat')
STRING_TEMPLATE_LITERAL_END ('`')
; (';')
WHITE_SPACE ('\n        ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
identifier ('msg')
) (')')
; (';')
WHITE_SPACE ('\n        ')
var ('var')
WHITE_SPACE (' ')
identifier ('v')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('consMap')
. ('.')
identifier ('remove')
( ('(')
< ('<')
string ('string')
> ('>')
identifier ('caller')
. ('.')
identifier ('id')
) (')')
; (';')
WHITE_SPACE ('\n        ')
foreach ('foreach')
WHITE_SPACE (' ')
identifier ('id')
, (',')
WHITE_SPACE (' ')
identifier ('con')
WHITE_SPACE (' ')
in ('in')
WHITE_SPACE (' ')
identifier ('consMap')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n            ')
identifier ('ep')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('con')
; (';')
WHITE_SPACE ('\n            ')
identifier ('error')
? ('?')
WHITE_SPACE (' ')
identifier ('err')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('ep')
-> ('->')
identifier ('send')
( ('(')
identifier ('msg')
) (')')
; (';')
WHITE_SPACE ('\n            ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
identifier ('err')
. ('.')
identifier ('message')
WHITE_SPACE (' ')
but ('but')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
( ('(')
) (')')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('""')
WHITE_SPACE (' ')
} ('}')
) (')')
; (';')
WHITE_SPACE ('\n        ')
} ('}')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE ('\n\n')
type ('type')
WHITE_SPACE (' ')
identifier ('ChatMessage')
WHITE_SPACE (' ')
record ('record')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
string ('string')
WHITE_SPACE (' ')
identifier ('name')
; (';')
WHITE_SPACE ('\n    ')
string ('string')
WHITE_SPACE (' ')
identifier ('message')
; (';')
WHITE_SPACE ('\n')
} ('}')
; (';')
