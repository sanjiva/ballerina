import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('io')
; (';')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// This function accepts the age and returns the age category. If the age is a')
WHITE_SPACE ('\n')
LINE_COMMENT ('// negative value, it returns an error. ')
WHITE_SPACE ('\n')
function ('function')
WHITE_SPACE (' ')
identifier ('getAgeCategory')
( ('(')
int ('int')
WHITE_SPACE (' ')
identifier ('age')
) (')')
WHITE_SPACE (' ')
returns ('returns')
WHITE_SPACE (' ')
string ('string')
| ('|')
identifier ('error')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
if ('if')
WHITE_SPACE (' ')
( ('(')
identifier ('age')
WHITE_SPACE (' ')
< ('<')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('0')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('error')
WHITE_SPACE (' ')
identifier ('e')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
identifier ('message')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"Invalid"')
WHITE_SPACE (' ')
} ('}')
; (';')
WHITE_SPACE ('\n        ')
return ('return')
WHITE_SPACE (' ')
identifier ('e')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE (' ')
else ('else')
WHITE_SPACE (' ')
if ('if')
WHITE_SPACE (' ')
( ('(')
identifier ('age')
WHITE_SPACE (' ')
<= ('<=')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('18')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
return ('return')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"Child"')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE (' ')
else ('else')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
return ('return')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"Adult"')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE ('\n\n')
function ('function')
WHITE_SPACE (' ')
identifier ('main')
( ('(')
string ('string')
... ('...')
WHITE_SPACE (' ')
identifier ('args')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// The `getAgeCategory` function returns a string for a valid age. This string')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// is matched with the string pattern in the match expression. Then the same value is assigned to the error')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('//category.')
WHITE_SPACE ('\n\n    ')
string ('string')
WHITE_SPACE (' ')
identifier ('ageCategory')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('getAgeCategory')
( ('(')
DECIMAL_INTEGER_LITERAL ('25')
) (')')
WHITE_SPACE (' ')
but ('but')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
string ('string')
WHITE_SPACE (' ')
identifier ('s')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
identifier ('s')
, (',')
WHITE_SPACE ('\n        ')
identifier ('error')
WHITE_SPACE (' ')
identifier ('e')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
identifier ('e')
. ('.')
identifier ('message')
WHITE_SPACE ('\n    ')
} ('}')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
identifier ('ageCategory')
) (')')
; (';')
WHITE_SPACE ('\n\n\n    ')
LINE_COMMENT ('// If a negative value is provided, this returns an error. This error is matched with')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// the error pattern in the match expression. Then the message to be sent with the error is assigned based on')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('//the error category.')
WHITE_SPACE ('\n\n    ')
identifier ('ageCategory')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('getAgeCategory')
( ('(')
- ('-')
DECIMAL_INTEGER_LITERAL ('5')
) (')')
WHITE_SPACE (' ')
but ('but')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
string ('string')
WHITE_SPACE (' ')
identifier ('s')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
identifier ('s')
, (',')
WHITE_SPACE ('\n        ')
identifier ('error')
WHITE_SPACE (' ')
identifier ('e')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
identifier ('e')
. ('.')
identifier ('message')
WHITE_SPACE ('\n    ')
} ('}')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
identifier ('ageCategory')
) (')')
; (';')
WHITE_SPACE ('\n\n\n    ')
LINE_COMMENT ('// A match expression has an implicit default pattern. This is because')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// the `getAgeCategory` function returns a string and the type of `ageCategory`')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// is also string. Therefore, it is not required to provide a pattern to match the string type')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// in the match expression. Any string value returned by the function')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// is assigned to the `ageCategory` by default.')
WHITE_SPACE ('\n    ')
identifier ('ageCategory')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('getAgeCategory')
( ('(')
DECIMAL_INTEGER_LITERAL ('25')
) (')')
WHITE_SPACE (' ')
but ('but')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('error')
WHITE_SPACE (' ')
identifier ('e')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
identifier ('e')
. ('.')
identifier ('message')
WHITE_SPACE ('\n    ')
} ('}')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
identifier ('ageCategory')
) (')')
; (';')
WHITE_SPACE ('\n')
} ('}')
