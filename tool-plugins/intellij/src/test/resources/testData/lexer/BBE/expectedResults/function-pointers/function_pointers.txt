import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('io')
; (';')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// The 'test' function acts as a variable function pointer in the 'main' function')
WHITE_SPACE ('\n')
function ('function')
WHITE_SPACE (' ')
identifier ('test')
( ('(')
int ('int')
WHITE_SPACE (' ')
identifier ('x')
, (',')
WHITE_SPACE (' ')
string ('string')
WHITE_SPACE (' ')
identifier ('s')
) (')')
WHITE_SPACE (' ')
returns ('returns')
WHITE_SPACE (' ')
( ('(')
float ('float')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
int ('int')
WHITE_SPACE (' ')
identifier ('y')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
check ('check')
WHITE_SPACE (' ')
< ('<')
int ('int')
> ('>')
WHITE_SPACE (' ')
identifier ('s')
; (';')
WHITE_SPACE ('\n    ')
float ('float')
WHITE_SPACE (' ')
identifier ('f')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('x')
WHITE_SPACE (' ')
* ('*')
WHITE_SPACE (' ')
FLOATING_POINT_LITERAL ('1.0')
WHITE_SPACE (' ')
* ('*')
WHITE_SPACE (' ')
identifier ('y')
; (';')
WHITE_SPACE ('\n    ')
return ('return')
WHITE_SPACE (' ')
identifier ('f')
; (';')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// Function pointer as a parameter.')
WHITE_SPACE ('\n')
function ('function')
WHITE_SPACE (' ')
identifier ('foo')
( ('(')
int ('int')
WHITE_SPACE (' ')
identifier ('x')
, (',')
WHITE_SPACE (' ')
function ('function')
WHITE_SPACE (' ')
( ('(')
int ('int')
, (',')
WHITE_SPACE (' ')
string ('string')
) (')')
WHITE_SPACE (' ')
returns ('returns')
WHITE_SPACE (' ')
( ('(')
float ('float')
) (')')
WHITE_SPACE (' ')
identifier ('bar')
) (')')
WHITE_SPACE (' \n             ')
returns ('returns')
WHITE_SPACE (' ')
( ('(')
float ('float')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
return ('return')
WHITE_SPACE (' ')
identifier ('x')
WHITE_SPACE (' ')
* ('*')
WHITE_SPACE (' ')
identifier ('bar')
( ('(')
DECIMAL_INTEGER_LITERAL ('10')
, (',')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"2"')
) (')')
; (';')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// Function pointer as a return type.')
WHITE_SPACE ('\n')
function ('function')
WHITE_SPACE (' ')
identifier ('getIt')
( ('(')
) (')')
WHITE_SPACE (' ')
returns ('returns')
WHITE_SPACE (' ')
( ('(')
function ('function')
WHITE_SPACE (' ')
( ('(')
int ('int')
, (',')
WHITE_SPACE (' ')
string ('string')
) (')')
WHITE_SPACE (' ')
returns ('returns')
WHITE_SPACE (' ')
( ('(')
float ('float')
) (')')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
return ('return')
WHITE_SPACE (' ')
identifier ('test')
; (';')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE ('\n\n')
function ('function')
WHITE_SPACE (' ')
identifier ('main')
( ('(')
string ('string')
... ('...')
WHITE_SPACE (' ')
identifier ('args')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// Value 'test' will serve as a function pointer to the 'foo' function.')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Answer: "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
identifier ('foo')
( ('(')
DECIMAL_INTEGER_LITERAL ('10')
, (',')
WHITE_SPACE (' ')
identifier ('test')
) (')')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Answer: "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
identifier ('foo')
( ('(')
DECIMAL_INTEGER_LITERAL ('10')
, (',')
WHITE_SPACE (' ')
identifier ('getIt')
( ('(')
) (')')
) (')')
) (')')
; (';')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// Function pointer as a variable;')
WHITE_SPACE ('\n    ')
function ('function')
WHITE_SPACE (' ')
( ('(')
int ('int')
, (',')
WHITE_SPACE (' ')
string ('string')
) (')')
WHITE_SPACE (' ')
returns ('returns')
WHITE_SPACE (' ')
( ('(')
float ('float')
) (')')
WHITE_SPACE (' ')
identifier ('f')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('getIt')
( ('(')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Answer: "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
identifier ('foo')
( ('(')
DECIMAL_INTEGER_LITERAL ('10')
, (',')
WHITE_SPACE (' ')
identifier ('f')
) (')')
) (')')
; (';')
WHITE_SPACE ('\n')
} ('}')
