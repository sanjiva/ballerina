import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('http')
; (';')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// The endpoint used here is `http:SecureListener`, which by default tries to')
WHITE_SPACE ('\n')
LINE_COMMENT ('// authenticate and authorize each request. The developer has the option to')
WHITE_SPACE ('\n')
LINE_COMMENT ('// override the authentication and authorization at the service level and resource level.')
WHITE_SPACE ('\n')
endpoint ('endpoint')
WHITE_SPACE (' ')
identifier ('http')
: (':')
identifier ('SecureListener')
WHITE_SPACE (' ')
identifier ('ep')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
identifier ('port')
: (':')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('9090')
, (',')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// The secure hello world sample uses https.')
WHITE_SPACE ('\n    ')
identifier ('secureSocket')
: (':')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('keyStore')
: (':')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n            ')
identifier ('path')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"${ballerina.home}/bre/security/ballerinaKeystore.p12"')
, (',')
WHITE_SPACE ('\n            ')
identifier ('password')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"ballerina"')
WHITE_SPACE ('\n        ')
} ('}')
, (',')
WHITE_SPACE ('\n        ')
identifier ('trustStore')
: (':')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n            ')
identifier ('path')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"${ballerina.home}/bre/security/ballerinaTruststore.p12"')
, (',')
WHITE_SPACE ('\n            ')
identifier ('password')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"ballerina"')
WHITE_SPACE ('\n        ')
} ('}')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n')
} ('}')
; (';')
WHITE_SPACE ('\n\n')
@ ('@')
identifier ('http')
: (':')
identifier ('ServiceConfig')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
identifier ('basePath')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"/hello"')
, (',')
WHITE_SPACE ('\n    ')
identifier ('authConfig')
: (':')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('authentication')
: (':')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
identifier ('enabled')
: (':')
WHITE_SPACE (' ')
BOOLEAN_LITERAL ('true')
WHITE_SPACE (' ')
} ('}')
, (',')
WHITE_SPACE ('\n        ')
identifier ('scopes')
: (':')
WHITE_SPACE (' ')
[ ('[')
QUOTED_STRING_LITERAL ('"scope1"')
] (']')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE ('\n')
LINE_COMMENT ('// Auth configuration comprises of two parts - authentication & authorization.')
WHITE_SPACE ('\n')
LINE_COMMENT ('// Authentication can be enabled by setting the `authentication:{enabled:true}`')
WHITE_SPACE ('\n')
LINE_COMMENT ('// annotation attribute. ')
WHITE_SPACE ('\n')
LINE_COMMENT ('// Authorization is based on scopes, where a scope maps to one or more groups.')
WHITE_SPACE ('\n')
LINE_COMMENT ('// For a user to access a resource, the user should be in the same groups as')
WHITE_SPACE ('\n')
LINE_COMMENT ('// the scope.')
WHITE_SPACE ('\n')
LINE_COMMENT ('// To specify one or more scopes of a resource, the `scopes` annotation attribute')
WHITE_SPACE ('\n')
LINE_COMMENT ('// can be used.')
WHITE_SPACE ('\n')
service ('service')
< ('<')
identifier ('http')
: (':')
identifier ('Service')
> ('>')
WHITE_SPACE (' ')
identifier ('echo')
WHITE_SPACE (' ')
bind ('bind')
WHITE_SPACE (' ')
identifier ('ep')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
@ ('@')
identifier ('http')
: (':')
identifier ('ResourceConfig')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('methods')
: (':')
WHITE_SPACE (' ')
[ ('[')
QUOTED_STRING_LITERAL ('"GET"')
] (']')
, (',')
WHITE_SPACE ('\n        ')
identifier ('path')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"/sayHello"')
, (',')
WHITE_SPACE ('\n        ')
identifier ('authConfig')
: (':')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n            ')
identifier ('scopes')
: (':')
WHITE_SPACE (' ')
[ ('[')
QUOTED_STRING_LITERAL ('"scope2"')
] (']')
WHITE_SPACE ('\n        ')
} ('}')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// The authentication and authorization settings can be overridden at')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// resource level.')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// The hello resource would inherit the `authentication:{enabled:true}` flag')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// from the service level, and override the scope defined in the service level')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// (i.e., scope1) with scope2.')
WHITE_SPACE ('\n    ')
identifier ('hello')
( ('(')
endpoint ('endpoint')
WHITE_SPACE (' ')
identifier ('caller')
, (',')
WHITE_SPACE (' ')
identifier ('http')
: (':')
identifier ('Request')
WHITE_SPACE (' ')
identifier ('req')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('http')
: (':')
identifier ('Response')
WHITE_SPACE (' ')
identifier ('res')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
new ('new')
; (';')
WHITE_SPACE ('\n        ')
identifier ('res')
. ('.')
identifier ('setPayload')
( ('(')
QUOTED_STRING_LITERAL ('"Hello, World!!!"')
) (')')
; (';')
WHITE_SPACE ('\n        ')
identifier ('_')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('caller')
-> ('->')
identifier ('respond')
( ('(')
identifier ('res')
) (')')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n')
} ('}')
