import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('log')
; (';')
WHITE_SPACE ('\n')
import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('http')
; (';')
WHITE_SPACE ('\n\n')
@ ('@')
identifier ('final')
WHITE_SPACE (' ')
string ('string')
WHITE_SPACE (' ')
identifier ('NAME')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"NAME"')
; (';')
WHITE_SPACE ('\n')
@ ('@')
identifier ('final')
WHITE_SPACE (' ')
string ('string')
WHITE_SPACE (' ')
identifier ('AGE')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"AGE"')
; (';')
WHITE_SPACE ('\n\n')
@ ('@')
identifier ('http')
: (':')
identifier ('ServiceConfig')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
identifier ('basePath')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"/chat"')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE ('\n')
service ('service')
< ('<')
identifier ('http')
: (':')
identifier ('Service')
> ('>')
WHITE_SPACE (' ')
identifier ('chatAppUpgrader')
WHITE_SPACE (' ')
bind ('bind')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
identifier ('port')
: (':')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('9090')
WHITE_SPACE (' ')
} ('}')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// Upgrade from HTTP to WebSocket and define the service the WebSocket client needs to connect to.')
WHITE_SPACE ('\n    ')
@ ('@')
identifier ('http')
: (':')
identifier ('ResourceConfig')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('webSocketUpgrade')
: (':')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n            ')
identifier ('upgradePath')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"/{name}"')
, (',')
WHITE_SPACE ('\n            ')
identifier ('upgradeService')
: (':')
WHITE_SPACE (' ')
identifier ('chatApp')
WHITE_SPACE ('\n        ')
} ('}')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n    ')
identifier ('upgrader')
( ('(')
endpoint ('endpoint')
WHITE_SPACE (' ')
identifier ('caller')
, (',')
WHITE_SPACE (' ')
identifier ('http')
: (':')
identifier ('Request')
WHITE_SPACE (' ')
identifier ('req')
, (',')
WHITE_SPACE (' ')
string ('string')
WHITE_SPACE (' ')
identifier ('name')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
endpoint ('endpoint')
WHITE_SPACE (' ')
identifier ('http')
: (':')
identifier ('WebSocketListener')
WHITE_SPACE (' ')
identifier ('wsEp')
; (';')
WHITE_SPACE ('\n        ')
map ('map')
< ('<')
string ('string')
> ('>')
WHITE_SPACE (' ')
identifier ('queryParams')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('req')
. ('.')
identifier ('getQueryParams')
( ('(')
) (')')
; (';')
WHITE_SPACE ('\n        ')
LINE_COMMENT ('// Cancel handshake by sending a 400 status code if the age parameter is missing in the request.')
WHITE_SPACE ('\n        ')
if ('if')
WHITE_SPACE (' ')
( ('(')
! ('!')
identifier ('queryParams')
. ('.')
identifier ('hasKey')
( ('(')
QUOTED_STRING_LITERAL ('"age"')
) (')')
) (')')
{ ('{')
WHITE_SPACE ('\n            ')
identifier ('caller')
-> ('->')
identifier ('cancelWebSocketUpgrade')
( ('(')
DECIMAL_INTEGER_LITERAL ('400')
, (',')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"Age is required"')
) (')')
WHITE_SPACE (' ')
but ('but')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n                ')
identifier ('error')
WHITE_SPACE (' ')
identifier ('e')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
identifier ('log')
: (':')
identifier ('printError')
( ('(')
QUOTED_STRING_LITERAL ('"Error cancelling handshake"')
, (',')
WHITE_SPACE (' ')
identifier ('err')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('e')
) (')')
WHITE_SPACE ('\n            ')
} ('}')
; (';')
WHITE_SPACE ('\n            ')
done ('done')
; (';')
WHITE_SPACE ('\n        ')
} ('}')
WHITE_SPACE ('\n        ')
map ('map')
< ('<')
string ('string')
> ('>')
WHITE_SPACE (' ')
identifier ('headers')
; (';')
WHITE_SPACE ('\n        ')
identifier ('wsEp')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('caller')
-> ('->')
identifier ('acceptWebSocketUpgrade')
( ('(')
identifier ('headers')
) (')')
; (';')
WHITE_SPACE ('\n        ')
identifier ('wsEp')
. ('.')
identifier ('attributes')
[ ('[')
identifier ('NAME')
] (']')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('name')
; (';')
WHITE_SPACE ('\n        ')
identifier ('wsEp')
. ('.')
identifier ('attributes')
[ ('[')
identifier ('AGE')
] (']')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('queryParams')
[ ('[')
QUOTED_STRING_LITERAL ('"age"')
] (']')
; (';')
WHITE_SPACE ('\n        ')
string ('string')
WHITE_SPACE (' ')
identifier ('msg')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE ('\n            ')
QUOTED_STRING_LITERAL ('"Hi "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
identifier ('name')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"! You have succesfully connected to the chat"')
; (';')
WHITE_SPACE ('\n        ')
identifier ('wsEp')
-> ('->')
identifier ('pushText')
( ('(')
identifier ('msg')
) (')')
WHITE_SPACE (' ')
but ('but')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n            ')
identifier ('error')
WHITE_SPACE (' ')
identifier ('e')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
identifier ('log')
: (':')
identifier ('printError')
( ('(')
QUOTED_STRING_LITERAL ('"Error sending message"')
, (',')
WHITE_SPACE (' ')
identifier ('err')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('e')
) (')')
WHITE_SPACE ('\n        ')
} ('}')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// Stores the connection IDs of users who join the chat.')
WHITE_SPACE ('\n')
map ('map')
< ('<')
identifier ('http')
: (':')
identifier ('WebSocketListener')
> ('>')
WHITE_SPACE (' ')
identifier ('connectionsMap')
; (';')
WHITE_SPACE ('\n\n')
service ('service')
< ('<')
identifier ('http')
: (':')
identifier ('WebSocketService')
> ('>')
WHITE_SPACE (' ')
identifier ('chatApp')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// Store the attributes of the user, such as username and age, once the user connects to the chat client, and')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// broadcast that the user has joined the chat.')
WHITE_SPACE ('\n    ')
identifier ('onOpen')
( ('(')
endpoint ('endpoint')
WHITE_SPACE (' ')
identifier ('caller')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
string ('string')
WHITE_SPACE (' ')
identifier ('msg')
; (';')
WHITE_SPACE ('\n        ')
identifier ('msg')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('getAttributeStr')
( ('(')
identifier ('caller')
, (',')
WHITE_SPACE (' ')
identifier ('NAME')
) (')')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('" with age "')
WHITE_SPACE ('\n                    ')
+ ('+')
WHITE_SPACE (' ')
identifier ('getAttributeStr')
( ('(')
identifier ('caller')
, (',')
WHITE_SPACE (' ')
identifier ('AGE')
) (')')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('" connected to chat"')
; (';')
WHITE_SPACE ('\n        ')
identifier ('broadcast')
( ('(')
identifier ('msg')
) (')')
; (';')
WHITE_SPACE ('\n        ')
identifier ('connectionsMap')
[ ('[')
identifier ('caller')
. ('.')
identifier ('id')
] (']')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('caller')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// Broadcast the messages sent by a user.')
WHITE_SPACE ('\n    ')
identifier ('onText')
( ('(')
endpoint ('endpoint')
WHITE_SPACE (' ')
identifier ('caller')
, (',')
WHITE_SPACE (' ')
string ('string')
WHITE_SPACE (' ')
identifier ('text')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
string ('string')
WHITE_SPACE (' ')
identifier ('msg')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('getAttributeStr')
( ('(')
identifier ('caller')
, (',')
WHITE_SPACE (' ')
identifier ('NAME')
) (')')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('": "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
identifier ('text')
; (';')
WHITE_SPACE ('\n        ')
identifier ('log')
: (':')
identifier ('printInfo')
( ('(')
identifier ('msg')
) (')')
; (';')
WHITE_SPACE ('\n        ')
identifier ('broadcast')
( ('(')
identifier ('msg')
) (')')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// Broadcast that a user has left the chat once a user leaves the chat.')
WHITE_SPACE ('\n    ')
identifier ('onClose')
( ('(')
endpoint ('endpoint')
WHITE_SPACE (' ')
identifier ('caller')
, (',')
WHITE_SPACE (' ')
int ('int')
WHITE_SPACE (' ')
identifier ('statusCode')
, (',')
WHITE_SPACE (' ')
string ('string')
WHITE_SPACE (' ')
identifier ('reason')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('_')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('connectionsMap')
. ('.')
identifier ('remove')
( ('(')
identifier ('caller')
. ('.')
identifier ('id')
) (')')
; (';')
WHITE_SPACE ('\n        ')
string ('string')
WHITE_SPACE (' ')
identifier ('msg')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('getAttributeStr')
( ('(')
identifier ('caller')
, (',')
WHITE_SPACE (' ')
identifier ('NAME')
) (')')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('" left the chat"')
; (';')
WHITE_SPACE ('\n        ')
identifier ('broadcast')
( ('(')
identifier ('msg')
) (')')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE ('\n\n')
function ('function')
WHITE_SPACE (' ')
identifier ('broadcast')
( ('(')
string ('string')
WHITE_SPACE (' ')
identifier ('text')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
endpoint ('endpoint')
WHITE_SPACE (' ')
identifier ('http')
: (':')
identifier ('WebSocketListener')
WHITE_SPACE (' ')
identifier ('ep')
; (';')
WHITE_SPACE ('\n    ')
foreach ('foreach')
WHITE_SPACE (' ')
identifier ('id')
, (',')
WHITE_SPACE (' ')
identifier ('con')
WHITE_SPACE (' ')
in ('in')
WHITE_SPACE (' ')
identifier ('connectionsMap')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('ep')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('con')
; (';')
WHITE_SPACE ('\n        ')
identifier ('ep')
-> ('->')
identifier ('pushText')
( ('(')
identifier ('text')
) (')')
WHITE_SPACE (' ')
but ('but')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n            ')
identifier ('error')
WHITE_SPACE (' ')
identifier ('e')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
identifier ('log')
: (':')
identifier ('printError')
( ('(')
QUOTED_STRING_LITERAL ('"Error sending message"')
, (',')
WHITE_SPACE (' ')
identifier ('err')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('e')
) (')')
WHITE_SPACE ('\n        ')
} ('}')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE ('\n\n')
function ('function')
WHITE_SPACE (' ')
identifier ('getAttributeStr')
( ('(')
identifier ('http')
: (':')
identifier ('WebSocketListener')
WHITE_SPACE (' ')
identifier ('ep')
, (',')
WHITE_SPACE (' ')
string ('string')
WHITE_SPACE (' ')
identifier ('key')
) (')')
WHITE_SPACE ('\n             ')
returns ('returns')
WHITE_SPACE (' ')
( ('(')
string ('string')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
var ('var')
WHITE_SPACE (' ')
identifier ('name')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
< ('<')
string ('string')
> ('>')
identifier ('ep')
. ('.')
identifier ('attributes')
[ ('[')
identifier ('key')
] (']')
; (';')
WHITE_SPACE ('\n    ')
return ('return')
WHITE_SPACE (' ')
identifier ('name')
; (';')
WHITE_SPACE ('\n')
} ('}')
