import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('io')
; (';')
WHITE_SPACE ('\n\n')
type ('type')
WHITE_SPACE (' ')
identifier ('Employee')
WHITE_SPACE (' ')
record ('record')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
int ('int')
WHITE_SPACE (' ')
identifier ('id')
, (',')
WHITE_SPACE ('\n    ')
string ('string')
WHITE_SPACE (' ')
identifier ('name')
, (',')
WHITE_SPACE ('\n    ')
float ('float')
WHITE_SPACE (' ')
identifier ('salary')
, (',')
WHITE_SPACE ('\n')
} ('}')
; (';')
WHITE_SPACE ('\n\n')
type ('type')
WHITE_SPACE (' ')
identifier ('EmployeeSalary')
WHITE_SPACE (' ')
record ('record')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
int ('int')
WHITE_SPACE (' ')
identifier ('id')
, (',')
WHITE_SPACE ('\n    ')
float ('float')
WHITE_SPACE (' ')
identifier ('salary')
, (',')
WHITE_SPACE ('\n')
} ('}')
; (';')
WHITE_SPACE ('\n\n')
function ('function')
WHITE_SPACE (' ')
identifier ('main')
( ('(')
string ('string')
... ('...')
WHITE_SPACE (' ')
identifier ('args')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// This creates an in-memory table constrained by the `Employee` type with id marked as the')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// primary key in column descriptor. Three data records are inserted to the table. Order of')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// the data values should match with the order of the column descriptor.')
WHITE_SPACE ('\n    ')
table ('table')
< ('<')
identifier ('Employee')
> ('>')
WHITE_SPACE (' ')
identifier ('tbEmployee')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
table ('table')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
{ ('{')
WHITE_SPACE (' ')
primarykey ('primarykey')
WHITE_SPACE (' ')
identifier ('id')
, (',')
WHITE_SPACE (' ')
identifier ('name')
, (',')
WHITE_SPACE (' ')
identifier ('salary')
WHITE_SPACE (' ')
} ('}')
, (',')
WHITE_SPACE ('\n        ')
[ ('[')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('1')
, (',')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"Mary"')
, (',')
WHITE_SPACE ('  ')
FLOATING_POINT_LITERAL ('300.5')
WHITE_SPACE (' ')
} ('}')
, (',')
WHITE_SPACE ('\n          ')
{ ('{')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('2')
, (',')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"John"')
, (',')
WHITE_SPACE ('  ')
FLOATING_POINT_LITERAL ('200.5')
WHITE_SPACE (' ')
} ('}')
, (',')
WHITE_SPACE ('\n          ')
{ ('{')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('3')
, (',')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"Jim"')
, (',')
WHITE_SPACE (' ')
FLOATING_POINT_LITERAL ('330.5')
WHITE_SPACE (' ')
} ('}')
WHITE_SPACE ('\n        ')
] (']')
WHITE_SPACE ('\n    ')
} ('}')
; (';')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// This prints the table data.')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('print')
( ('(')
QUOTED_STRING_LITERAL ('"Table Information: "')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
identifier ('tbEmployee')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// Create Employee records.')
WHITE_SPACE ('\n    ')
identifier ('Employee')
WHITE_SPACE (' ')
identifier ('e1')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
identifier ('id')
: (':')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('1')
, (',')
WHITE_SPACE (' ')
identifier ('name')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"Jane"')
, (',')
WHITE_SPACE (' ')
identifier ('salary')
: (':')
WHITE_SPACE (' ')
FLOATING_POINT_LITERAL ('300.50')
WHITE_SPACE (' ')
} ('}')
; (';')
WHITE_SPACE ('\n    ')
identifier ('Employee')
WHITE_SPACE (' ')
identifier ('e2')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
identifier ('id')
: (':')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('2')
, (',')
WHITE_SPACE (' ')
identifier ('name')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"Anne"')
, (',')
WHITE_SPACE (' ')
identifier ('salary')
: (':')
WHITE_SPACE (' ')
FLOATING_POINT_LITERAL ('100.50')
WHITE_SPACE (' ')
} ('}')
; (';')
WHITE_SPACE ('\n    ')
identifier ('Employee')
WHITE_SPACE (' ')
identifier ('e3')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
identifier ('id')
: (':')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('3')
, (',')
WHITE_SPACE (' ')
identifier ('name')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"John"')
, (',')
WHITE_SPACE (' ')
identifier ('salary')
: (':')
WHITE_SPACE (' ')
FLOATING_POINT_LITERAL ('400.50')
WHITE_SPACE (' ')
} ('}')
; (';')
WHITE_SPACE ('\n    ')
identifier ('Employee')
WHITE_SPACE (' ')
identifier ('e4')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
identifier ('id')
: (':')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('4')
, (',')
WHITE_SPACE (' ')
identifier ('name')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"Peter"')
, (',')
WHITE_SPACE (' ')
identifier ('salary')
: (':')
WHITE_SPACE (' ')
FLOATING_POINT_LITERAL ('150.0')
WHITE_SPACE (' ')
} ('}')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// This creates an in-memory table constrained by the `Employee` type with id as the primary key.')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// Two records are inserted to the table.')
WHITE_SPACE ('\n    ')
table ('table')
< ('<')
identifier ('Employee')
> ('>')
WHITE_SPACE (' ')
identifier ('tb')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
table ('table')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
{ ('{')
WHITE_SPACE (' ')
primarykey ('primarykey')
WHITE_SPACE (' ')
identifier ('id')
, (',')
WHITE_SPACE (' ')
identifier ('name')
, (',')
WHITE_SPACE (' ')
identifier ('salary')
WHITE_SPACE (' ')
} ('}')
, (',')
WHITE_SPACE ('\n        ')
[ ('[')
identifier ('e1')
, (',')
WHITE_SPACE (' ')
identifier ('e2')
] (']')
WHITE_SPACE ('\n    ')
} ('}')
; (';')
WHITE_SPACE ('\n\n    ')
identifier ('Employee')
[ ('[')
] (']')
WHITE_SPACE (' ')
identifier ('employees')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
[ ('[')
identifier ('e3')
, (',')
WHITE_SPACE (' ')
identifier ('e4')
] (']')
; (';')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// This adds the created records to the table.')
WHITE_SPACE ('\n    ')
foreach ('foreach')
WHITE_SPACE (' ')
( ('(')
identifier ('emp')
WHITE_SPACE (' ')
in ('in')
WHITE_SPACE (' ')
identifier ('employees')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
var ('var')
WHITE_SPACE (' ')
identifier ('ret')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('tb')
. ('.')
identifier ('add')
( ('(')
identifier ('emp')
) (')')
; (';')
WHITE_SPACE ('\n        ')
match ('match')
WHITE_SPACE (' ')
identifier ('ret')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n            ')
( ('(')
) (')')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Adding record to table successful"')
) (')')
; (';')
WHITE_SPACE ('\n            ')
identifier ('error')
WHITE_SPACE (' ')
identifier ('e')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Adding to table failed: "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
identifier ('e')
. ('.')
identifier ('message')
) (')')
; (';')
WHITE_SPACE ('\n        ')
} ('}')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// This prints the table data.')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('print')
( ('(')
QUOTED_STRING_LITERAL ('"Table Information: "')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
identifier ('tb')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// This accesses rows using the `foreach` loop.')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Using foreach: "')
) (')')
; (';')
WHITE_SPACE ('\n    ')
foreach ('foreach')
WHITE_SPACE (' ')
identifier ('x')
WHITE_SPACE (' ')
in ('in')
WHITE_SPACE (' ')
identifier ('tb')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Name: "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
identifier ('x')
. ('.')
identifier ('name')
) (')')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('//This accesses rows using the `while` loop.')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Using while loop: "')
) (')')
; (';')
WHITE_SPACE ('\n    ')
while ('while')
WHITE_SPACE (' ')
( ('(')
identifier ('tb')
. ('.')
identifier ('hasNext')
( ('(')
) (')')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
var ('var')
WHITE_SPACE (' ')
identifier ('ret')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
< ('<')
identifier ('Employee')
> ('>')
identifier ('tb')
. ('.')
identifier ('getNext')
( ('(')
) (')')
; (';')
WHITE_SPACE ('\n        ')
match ('match')
WHITE_SPACE (' ')
identifier ('ret')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n            ')
identifier ('Employee')
WHITE_SPACE (' ')
identifier ('e')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Name: "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
identifier ('e')
. ('.')
identifier ('name')
) (')')
; (';')
WHITE_SPACE ('\n            ')
identifier ('error')
WHITE_SPACE (' ')
identifier ('e')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Error in get employee from table: "')
WHITE_SPACE ('\n                                  ')
+ ('+')
WHITE_SPACE (' ')
identifier ('e')
. ('.')
identifier ('message')
) (')')
; (';')
WHITE_SPACE ('\n        ')
} ('}')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// This derives the average salary using the iterable operations.')
WHITE_SPACE ('\n    ')
float ('float')
WHITE_SPACE (' ')
identifier ('lowerAvgSal')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('tb')
. ('.')
identifier ('filter')
( ('(')
identifier ('isLowerSalary')
) (')')
. ('.')
map ('map')
( ('(')
identifier ('getSalary')
) (')')
. ('.')
identifier ('average')
( ('(')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Average of Low salary: "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
identifier ('lowerAvgSal')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('//This selects a subset of columns from the table.')
WHITE_SPACE ('\n    ')
table ('table')
< ('<')
identifier ('EmployeeSalary')
> ('>')
WHITE_SPACE (' ')
identifier ('salaryTable')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('tb')
. ('.')
identifier ('select')
( ('(')
identifier ('getEmployeeSalary')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('//This fetches the table count using the count operation.')
WHITE_SPACE ('\n    ')
int ('int')
WHITE_SPACE (' ')
identifier ('count')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('salaryTable')
. ('.')
identifier ('count')
( ('(')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Selected row count: "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
identifier ('count')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
identifier ('salaryTable')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// This deletes the rows that match a given criteria.')
WHITE_SPACE ('\n    ')
var ('var')
WHITE_SPACE (' ')
identifier ('ret')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('tb')
. ('.')
identifier ('remove')
( ('(')
identifier ('isLowerSalary')
) (')')
; (';')
WHITE_SPACE ('\n    ')
match ('match')
WHITE_SPACE (' ')
identifier ('ret')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
int ('int')
WHITE_SPACE (' ')
identifier ('rowCount')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Deleted row count: "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
identifier ('rowCount')
) (')')
; (';')
WHITE_SPACE ('\n        ')
identifier ('error')
WHITE_SPACE (' ')
identifier ('e')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Error in removing employees from table: "')
WHITE_SPACE ('\n                               ')
+ ('+')
WHITE_SPACE (' ')
identifier ('e')
. ('.')
identifier ('message')
) (')')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('print')
( ('(')
QUOTED_STRING_LITERAL ('"After Delete: "')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
identifier ('tb')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// This converts the table to JSON format.')
WHITE_SPACE ('\n    ')
var ('var')
WHITE_SPACE (' ')
identifier ('retValJson')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
< ('<')
json ('json')
> ('>')
identifier ('tb')
; (';')
WHITE_SPACE ('\n    ')
match ('match')
WHITE_SPACE (' ')
identifier ('retValJson')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
json ('json')
WHITE_SPACE (' ')
identifier ('j')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n            ')
identifier ('io')
: (':')
identifier ('print')
( ('(')
QUOTED_STRING_LITERAL ('"JSON: "')
) (')')
; (';')
WHITE_SPACE ('\n            ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
identifier ('j')
) (')')
; (';')
WHITE_SPACE ('\n        ')
} ('}')
WHITE_SPACE ('\n        ')
identifier ('error')
WHITE_SPACE (' ')
identifier ('e')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Error in table to json conversion"')
) (')')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// This converts the table to XML format.')
WHITE_SPACE ('\n    ')
var ('var')
WHITE_SPACE (' ')
identifier ('retValXml')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
< ('<')
xml ('xml')
> ('>')
identifier ('tb')
; (';')
WHITE_SPACE ('\n    ')
match ('match')
WHITE_SPACE (' ')
identifier ('retValXml')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
xml ('xml')
WHITE_SPACE (' ')
identifier ('x')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n            ')
identifier ('io')
: (':')
identifier ('print')
( ('(')
QUOTED_STRING_LITERAL ('"XML: "')
) (')')
; (';')
WHITE_SPACE ('\n            ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
identifier ('x')
) (')')
; (';')
WHITE_SPACE ('\n        ')
} ('}')
WHITE_SPACE ('\n        ')
identifier ('error')
WHITE_SPACE (' ')
identifier ('e')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Error in table to xml conversion"')
) (')')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE ('\n\n')
function ('function')
WHITE_SPACE (' ')
identifier ('isLowerSalary')
( ('(')
identifier ('Employee')
WHITE_SPACE (' ')
identifier ('p')
) (')')
WHITE_SPACE (' ')
returns ('returns')
WHITE_SPACE (' ')
boolean ('boolean')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
return ('return')
WHITE_SPACE (' ')
identifier ('p')
. ('.')
identifier ('salary')
WHITE_SPACE (' ')
< ('<')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('200')
; (';')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE ('\n\n')
function ('function')
WHITE_SPACE (' ')
identifier ('getSalary')
( ('(')
identifier ('Employee')
WHITE_SPACE (' ')
identifier ('p')
) (')')
WHITE_SPACE (' ')
returns ('returns')
WHITE_SPACE (' ')
float ('float')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
return ('return')
WHITE_SPACE (' ')
identifier ('p')
. ('.')
identifier ('salary')
; (';')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE ('\n\n')
function ('function')
WHITE_SPACE (' ')
identifier ('getEmployeeSalary')
( ('(')
identifier ('Employee')
WHITE_SPACE (' ')
identifier ('e')
) (')')
WHITE_SPACE (' ')
returns ('returns')
WHITE_SPACE (' ')
( ('(')
identifier ('EmployeeSalary')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
identifier ('EmployeeSalary')
WHITE_SPACE (' ')
identifier ('s')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
identifier ('id')
: (':')
WHITE_SPACE (' ')
identifier ('e')
. ('.')
identifier ('id')
, (',')
WHITE_SPACE (' ')
identifier ('salary')
: (':')
WHITE_SPACE (' ')
identifier ('e')
. ('.')
identifier ('salary')
WHITE_SPACE (' ')
} ('}')
; (';')
WHITE_SPACE ('\n    ')
return ('return')
WHITE_SPACE (' ')
identifier ('s')
; (';')
WHITE_SPACE ('\n')
} ('}')
