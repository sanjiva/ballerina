import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('jms')
; (';')
WHITE_SPACE ('\n')
import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('mb')
; (';')
WHITE_SPACE ('\n')
import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('log')
; (';')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// Initialize a JMS connection with the provider.')
WHITE_SPACE ('\n')
identifier ('jms')
: (':')
identifier ('Connection')
WHITE_SPACE (' ')
identifier ('conn')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
new ('new')
( ('(')
{ ('{')
WHITE_SPACE ('\n    ')
identifier ('initialContextFactory')
: (':')
QUOTED_STRING_LITERAL ('"bmbInitialContextFactory"')
, (',')
WHITE_SPACE ('\n    ')
identifier ('providerUrl')
: (':')
QUOTED_STRING_LITERAL ('"amqp://admin:admin@carbon/carbon"')
WHITE_SPACE ('\n                ')
+ ('+')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"?brokerlist='tcp://localhost:5672'"')
WHITE_SPACE ('\n')
} ('}')
) (')')
; (';')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// Initialize a JMS session on top of the created connection.')
WHITE_SPACE ('\n')
identifier ('jms')
: (':')
identifier ('Session')
WHITE_SPACE (' ')
identifier ('jmsSession')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
new ('new')
( ('(')
identifier ('conn')
, (',')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// An optional property that defaults to `AUTO_ACKNOWLEDGE`.')
WHITE_SPACE ('\n    ')
identifier ('acknowledgementMode')
: (':')
QUOTED_STRING_LITERAL ('"AUTO_ACKNOWLEDGE"')
WHITE_SPACE ('\n')
} ('}')
) (')')
; (';')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// Initialize a queue receiver using the created session.')
WHITE_SPACE ('\n')
endpoint ('endpoint')
WHITE_SPACE (' ')
identifier ('jms')
: (':')
identifier ('QueueReceiver')
WHITE_SPACE (' ')
identifier ('consumerEndpoint')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
identifier ('session')
: (':')
identifier ('jmsSession')
, (',')
WHITE_SPACE ('\n    ')
identifier ('queueName')
: (':')
QUOTED_STRING_LITERAL ('"MyQueue"')
WHITE_SPACE ('\n')
} ('}')
; (';')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// Bind the created consumer to the listener service.')
WHITE_SPACE ('\n')
service ('service')
< ('<')
identifier ('jms')
: (':')
identifier ('Consumer')
> ('>')
WHITE_SPACE (' ')
identifier ('jmsListener')
WHITE_SPACE (' ')
bind ('bind')
WHITE_SPACE (' ')
identifier ('consumerEndpoint')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// The `OnMessage` resource gets invoked when a message is received.')
WHITE_SPACE ('\n    ')
identifier ('onMessage')
( ('(')
endpoint ('endpoint')
WHITE_SPACE (' ')
identifier ('consumer')
, (',')
WHITE_SPACE (' ')
identifier ('jms')
: (':')
identifier ('Message')
WHITE_SPACE (' ')
identifier ('message')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
LINE_COMMENT ('// Create a queue sender.')
WHITE_SPACE ('\n        ')
endpoint ('endpoint')
WHITE_SPACE (' ')
identifier ('jms')
: (':')
identifier ('SimpleQueueSender')
WHITE_SPACE (' ')
identifier ('queueSender')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n            ')
identifier ('initialContextFactory')
: (':')
QUOTED_STRING_LITERAL ('"bmbInitialContextFactory"')
, (',')
WHITE_SPACE ('\n            ')
identifier ('providerUrl')
: (':')
QUOTED_STRING_LITERAL ('"amqp://admin:admin@carbon/carbon"')
WHITE_SPACE ('\n                        ')
+ ('+')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"?brokerlist='tcp://localhost:5672'"')
, (',')
WHITE_SPACE ('\n            ')
identifier ('queueName')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"RequestQueue"')
WHITE_SPACE ('\n        ')
} ('}')
; (';')
WHITE_SPACE ('\n\n        ')
match ('match')
WHITE_SPACE (' ')
( ('(')
identifier ('message')
. ('.')
identifier ('getTextMessageContent')
( ('(')
) (')')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n            ')
string ('string')
WHITE_SPACE (' ')
identifier ('content')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
identifier ('log')
: (':')
identifier ('printInfo')
( ('(')
QUOTED_STRING_LITERAL ('"Message Text: "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
identifier ('content')
) (')')
; (';')
WHITE_SPACE ('\n            ')
identifier ('error')
WHITE_SPACE (' ')
identifier ('e')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
identifier ('log')
: (':')
identifier ('printError')
( ('(')
QUOTED_STRING_LITERAL ('"Error retrieving content"')
, (',')
WHITE_SPACE (' ')
identifier ('err')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('e')
) (')')
; (';')
WHITE_SPACE ('\n        ')
} ('}')
WHITE_SPACE ('\n\n        ')
LINE_COMMENT ('// Retrieve JMS message headers')
WHITE_SPACE ('\n        ')
match ('match')
WHITE_SPACE (' ')
( ('(')
identifier ('message')
. ('.')
identifier ('getCorrelationID')
( ('(')
) (')')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n            ')
string ('string')
WHITE_SPACE (' ')
identifier ('id')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
identifier ('log')
: (':')
identifier ('printInfo')
( ('(')
QUOTED_STRING_LITERAL ('"Correlation ID: "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
identifier ('id')
) (')')
; (';')
WHITE_SPACE ('\n            ')
( ('(')
) (')')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
identifier ('log')
: (':')
identifier ('printInfo')
( ('(')
QUOTED_STRING_LITERAL ('"Correlation ID not set"')
) (')')
; (';')
WHITE_SPACE ('\n            ')
identifier ('error')
WHITE_SPACE (' ')
identifier ('e')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
identifier ('log')
: (':')
identifier ('printError')
( ('(')
QUOTED_STRING_LITERAL ('"Error getting correlation id"')
, (',')
WHITE_SPACE (' ')
identifier ('err')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('e')
) (')')
; (';')
WHITE_SPACE ('\n        ')
} ('}')
WHITE_SPACE ('\n\n        ')
match ('match')
WHITE_SPACE (' ')
( ('(')
identifier ('message')
. ('.')
identifier ('getType')
( ('(')
) (')')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n            ')
string ('string')
WHITE_SPACE (' ')
identifier ('msgType')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
identifier ('log')
: (':')
identifier ('printInfo')
( ('(')
QUOTED_STRING_LITERAL ('"Message Type: "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
identifier ('msgType')
) (')')
; (';')
WHITE_SPACE ('\n            ')
identifier ('error')
WHITE_SPACE (' ')
identifier ('e')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
identifier ('log')
: (':')
identifier ('printError')
( ('(')
QUOTED_STRING_LITERAL ('"Error getting message type"')
, (',')
WHITE_SPACE (' ')
identifier ('err')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('e')
) (')')
; (';')
WHITE_SPACE ('\n        ')
} ('}')
WHITE_SPACE ('\n\n        ')
LINE_COMMENT ('// Retrieve custom JMS string property.')
WHITE_SPACE ('\n        ')
match ('match')
WHITE_SPACE (' ')
( ('(')
identifier ('message')
. ('.')
identifier ('getStringProperty')
( ('(')
QUOTED_STRING_LITERAL ('"ShoeSize"')
) (')')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n            ')
string ('string')
WHITE_SPACE (' ')
identifier ('size')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
identifier ('log')
: (':')
identifier ('printInfo')
( ('(')
QUOTED_STRING_LITERAL ('"Shoe size: "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
identifier ('size')
) (')')
; (';')
WHITE_SPACE ('\n            ')
( ('(')
) (')')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
identifier ('log')
: (':')
identifier ('printInfo')
( ('(')
QUOTED_STRING_LITERAL ('"Please provide the shoe size"')
) (')')
; (';')
WHITE_SPACE ('\n            ')
identifier ('error')
WHITE_SPACE (' ')
identifier ('e')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
identifier ('log')
: (':')
identifier ('printError')
( ('(')
QUOTED_STRING_LITERAL ('"Error getting string property"')
, (',')
WHITE_SPACE (' ')
identifier ('err')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('e')
) (')')
; (';')
WHITE_SPACE ('\n        ')
} ('}')
WHITE_SPACE ('\n\n        ')
LINE_COMMENT ('// Create a new text message')
WHITE_SPACE ('\n        ')
match ('match')
WHITE_SPACE (' ')
( ('(')
identifier ('queueSender')
. ('.')
identifier ('createTextMessage')
( ('(')
QUOTED_STRING_LITERAL ('"Hello From Ballerina!"')
) (')')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n            ')
identifier ('error')
WHITE_SPACE (' ')
identifier ('e')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
identifier ('log')
: (':')
identifier ('printError')
( ('(')
QUOTED_STRING_LITERAL ('"Error creating message"')
, (',')
WHITE_SPACE (' ')
identifier ('err')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('e')
) (')')
; (';')
WHITE_SPACE ('\n\n            ')
identifier ('jms')
: (':')
identifier ('Message')
WHITE_SPACE (' ')
identifier ('msg')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n                ')
LINE_COMMENT ('// Set JMS header, Correlation ID')
WHITE_SPACE ('\n                ')
match ('match')
WHITE_SPACE (' ')
( ('(')
identifier ('msg')
. ('.')
identifier ('setCorrelationID')
( ('(')
QUOTED_STRING_LITERAL ('"Msg:1"')
) (')')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n                    ')
identifier ('error')
WHITE_SPACE (' ')
identifier ('e')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
identifier ('log')
: (':')
identifier ('printError')
( ('(')
QUOTED_STRING_LITERAL ('"Error seeting correlation id"')
, (',')
WHITE_SPACE ('\n                                              ')
identifier ('err')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('e')
) (')')
; (';')
WHITE_SPACE ('\n                    ')
( ('(')
) (')')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
{ ('{')
} ('}')
WHITE_SPACE ('\n                ')
} ('}')
WHITE_SPACE ('\n                ')
LINE_COMMENT ('// Set a JMS string property')
WHITE_SPACE ('\n                ')
match ('match')
WHITE_SPACE (' ')
( ('(')
identifier ('msg')
. ('.')
identifier ('setStringProperty')
( ('(')
QUOTED_STRING_LITERAL ('"Instruction"')
, (',')
WHITE_SPACE ('\n                                             ')
QUOTED_STRING_LITERAL ('"Do a perfect Pirouette"')
) (')')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n                    ')
identifier ('error')
WHITE_SPACE (' ')
identifier ('e')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
identifier ('log')
: (':')
identifier ('printError')
( ('(')
QUOTED_STRING_LITERAL ('"Error seeting string property"')
, (',')
WHITE_SPACE ('\n                                              ')
identifier ('err')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('e')
) (')')
; (';')
WHITE_SPACE ('\n                    ')
( ('(')
) (')')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
{ ('{')
} ('}')
WHITE_SPACE ('\n                ')
} ('}')
WHITE_SPACE ('\n                ')
var ('var')
WHITE_SPACE (' ')
identifier ('result')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('queueSender')
-> ('->')
identifier ('send')
( ('(')
identifier ('msg')
) (')')
; (';')
WHITE_SPACE ('\n                ')
match ('match')
WHITE_SPACE (' ')
( ('(')
identifier ('result')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n                    ')
identifier ('error')
WHITE_SPACE (' ')
identifier ('e')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
identifier ('log')
: (':')
identifier ('printError')
( ('(')
QUOTED_STRING_LITERAL ('"Error sending message to broker"')
, (',')
WHITE_SPACE ('\n                                              ')
identifier ('err')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('e')
) (')')
; (';')
WHITE_SPACE ('\n                    ')
( ('(')
) (')')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
{ ('{')
} ('}')
WHITE_SPACE ('\n                ')
} ('}')
WHITE_SPACE ('\n            ')
} ('}')
WHITE_SPACE ('\n        ')
} ('}')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n')
} ('}')
