import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('io')
; (';')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// Defining a sealed record `Person`.')
WHITE_SPACE ('\n')
type ('type')
WHITE_SPACE (' ')
identifier ('Person')
WHITE_SPACE (' ')
record ('record')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
string ('string')
WHITE_SPACE (' ')
identifier ('name')
; (';')
WHITE_SPACE ('\n    ')
int ('int')
WHITE_SPACE (' ')
identifier ('age')
; (';')
WHITE_SPACE ('\n    ')
string ('string')
WHITE_SPACE (' ')
identifier ('city')
; (';')
WHITE_SPACE ('\n    ')
! ('!')
... ('...')
WHITE_SPACE ('\n')
} ('}')
; (';')
WHITE_SPACE ('\n\n')
function ('function')
WHITE_SPACE (' ')
identifier ('main')
( ('(')
string ('string')
... ('...')
WHITE_SPACE (' ')
identifier ('args')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// Create a new JSON that is constrained by the Person record. Only the')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// fields defined in the Person record can be accessed. If we try to')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// access a non existing field, it will produce a compilation error.')
WHITE_SPACE ('\n    ')
json ('json')
< ('<')
identifier ('Person')
> ('>')
WHITE_SPACE (' ')
identifier ('person')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
identifier ('name')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"Jon"')
WHITE_SPACE (' ')
} ('}')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// We can access fields defined in the Person record without any issue.')
WHITE_SPACE ('\n    ')
identifier ('person')
. ('.')
identifier ('age')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('25')
; (';')
WHITE_SPACE ('\n    ')
identifier ('person')
. ('.')
identifier ('city')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"Colombo"')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
identifier ('person')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// We can assign this constrained JSON to a JSON. This will allow us to')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// add new elements that are not in the record.')
WHITE_SPACE ('\n    ')
json ('json')
WHITE_SPACE (' ')
identifier ('employee')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('person')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// After that, we can add new elements to the JSON, and access them.')
WHITE_SPACE ('\n    ')
identifier ('employee')
. ('.')
identifier ('profession')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"Software Engineer"')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
identifier ('employee')
. ('.')
identifier ('profession')
) (')')
; (';')
WHITE_SPACE ('\n')
} ('}')
