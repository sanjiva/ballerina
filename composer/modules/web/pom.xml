<!--
  ~ /*
  ~ * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
  ~ *
  ~ * Licensed under the Apache License, Version 2.0 (the "License");
  ~ * you may not use this file except in compliance with the License.
  ~ * You may obtain a copy of the License at
  ~ *
  ~ * http://www.apache.org/licenses/LICENSE-2.0
  ~ *
  ~ * Unless required by applicable law or agreed to in writing, software
  ~ * distributed under the License is distributed on an "AS IS" BASIS,
  ~ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ * See the License for the specific language governing permissions and
  ~ * limitations under the License.
  ~ */
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.ballerinalang</groupId>
        <artifactId>composer</artifactId>
        <version>0.980.2-SNAPSHOT</version>
        <relativePath>../../pom.xml</relativePath>
    </parent>

    <artifactId>ballerina-composer-web</artifactId>
    <packaging>pom</packaging>
    <name>Ballerina - Composer - Web</name>
    <description>Ballerina Composer Web</description>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.5.2</version>
                <executions>
                    <execution>
                        <id>distribution</id>
                        <phase>package</phase>
                        <goals>
                            <goal>attached</goal>
                        </goals>
                        <configuration>
                            <descriptors>
                                <descriptor>${basedir}/assembly/bin.xml</descriptor>
                            </descriptors>
                            <finalName>${project.artifactId}-${project.version}</finalName>
                            <appendAssemblyId>false</appendAssemblyId>
                        </configuration>
                    </execution>
                    <execution>
                        <id>library-distribution</id>
                        <phase>package</phase>
                        <goals>
                            <goal>attached</goal>
                        </goals>
                        <configuration>
                            <descriptors>
                                <descriptor>${basedir}/library/assembly/bin.xml</descriptor>
                            </descriptors>
                        </configuration>
                    </execution>
                    <execution>
                        <id>electron-distribution</id>
                        <phase>package</phase>
                        <goals>
                            <goal>attached</goal>
                        </goals>
                        <configuration>
                            <descriptors>
                                <descriptor>${basedir}/assembly/electron-bin.xml</descriptor>
                            </descriptors>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>set-npm-executable</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <!-- set executable names based on OS family -->
                                <condition property="npm.executable" value="npm.cmd" else="npm">
                                    <os family="windows" />
                                </condition>
                            </target>
                            <exportAntProperties>true</exportAntProperties>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.5.0</version>
                <executions>
                    <execution>
                        <id>backup-package-lock</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <phase>validate</phase>
                        <configuration>
                            <skip>${skipClientSideBuild}</skip>
                            <executable>node</executable>
                            <arguments>
                                <argument>../scripts/npm-preinstall</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>npm install (initialize)</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <phase>initialize</phase>
                        <configuration>
                            <skip>${skipClientSideBuild}</skip>
                            <executable>${npm.executable}</executable>
                            <arguments>
                                <argument>install</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>replace-package-lock</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <phase>generate-sources</phase>
                        <configuration>
                            <skip>${skipClientSideBuild}</skip>
                            <executable>node</executable>
                            <arguments>
                                <argument>../scripts/npm-postinstall</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>npm run build (compile)</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <phase>compile</phase>
                        <configuration>
                            <skip>${skipClientSideBuild}</skip>
                            <executable>${npm.executable}</executable>
                            <arguments>
                                <argument>run</argument>
                                <argument>${npm.build.command}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>npm run build (compile) Electron</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <phase>compile</phase>
                        <configuration>
                            <skip>${skipClientSideBuild}</skip>
                            <executable>${npm.executable}</executable>
                            <arguments>
                                <argument>run</argument>
                                <argument>build-electron</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>npm run build (compile) library</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <phase>compile</phase>
                        <configuration>
                            <skip>${skipClientSideBuild}</skip>
                            <executable>${npm.executable}</executable>
                            <arguments>
                                <argument>run</argument>
                                <argument>build-library</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <!--Commenting as these are integration tests and should be moved to tools.-->
                    <!--<execution>-->
                        <!--<id>npm run test (test)</id>-->
                        <!--<goals>-->
                            <!--<goal>exec</goal>-->
                        <!--</goals>-->
                        <!--<phase>test</phase>-->
                        <!--<configuration>-->
                            <!--<executable>npm</executable>-->
                            <!--<arguments>-->
                                <!--<argument>run</argument>-->
                                <!--<argument>test</argument>-->
                                <!--<argument>&#45;&#45;</argument>-->
                                <!--<argument>&#45;&#45;skipTests=${maven.test.skip}</argument>-->
                            <!--</arguments>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>${build.helper.maven.plugin.version}</version>
                <executions>
                    <execution>
                        <id>parse-version</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>parse-version</goal>
                        </goals>
                        <configuration>
                            <propertyPrefix>parsedVersion</propertyPrefix>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.google.code.maven-replacer-plugin</groupId>
                <artifactId>replacer</artifactId>
                <version>${replacer.plugin.version}</version>
                <executions>
                    <execution>
                        <id>replace-versions</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>replace</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <includes>
                        <include>${basedir}/package.json</include>
                        <include>${basedir}/src/plugins/help/dialogs/about-dialog.jsx</include>
                        <include>${basedir}/src/config.js</include>
                    </includes>
                    <replacements>
                        <replacement>
                            <token>"version": "(.*?)",</token>
                            <value>"version": "\${parsedVersion.majorVersion}.\${parsedVersion.minorVersion}.\${parsedVersion.incrementalVersion}",</value>
                        </replacement>
                        <replacement>
                            <token>className='version'&gt;v(.*?)&lt;</token>
                            <value>className='version'&gt;v\${parsedVersion.majorVersion}.\${parsedVersion.minorVersion}.\${parsedVersion.incrementalVersion}.\${parsedVersion.qualifier}&lt;</value>
                        </replacement>
                        <replacement>
                            <token>https://ballerinalang.org/docs/api/(.*?)/</token>
                            <value>https://ballerinalang.org/docs/api/\${parsedVersion.majorVersion}.\${parsedVersion.minorVersion}.\${parsedVersion.incrementalVersion}/</value>
                        </replacement>
                    </replacements>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>electron-build</id>
            <properties>
                <!-- for electron the build command should be build-electron -->
                <npm.build.command>build-electron</npm.build.command>
            </properties>
        </profile>
        <profile>
            <id>skip-client</id>
            <properties>
                <skipClientSideBuild>true</skipClientSideBuild>
            </properties>
        </profile>
    </profiles>

    <properties>
        <maven.test.skip>false</maven.test.skip>
        <npm.build.command>build</npm.build.command>
        <build.helper.maven.plugin.version>1.8</build.helper.maven.plugin.version>
        <replacer.plugin.version>1.5.3</replacer.plugin.version>
        <skipClientSideBuild>false</skipClientSideBuild>
    </properties>
</project>
