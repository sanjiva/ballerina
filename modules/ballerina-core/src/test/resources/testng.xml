<?xml version="1.0" encoding="UTF-8"?>
<!--
Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.

WSO2 Inc. licenses this file to you under the Apache License,
Version 2.0 (the "License"); you may not use this file except
in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
-->

<!DOCTYPE suite SYSTEM "http://testng.org/testng-1.0.dtd" >

<suite name="ballerina-test-suite">

    <!-- Ballerina language Test Cases. -->
    <test name="ballerina-lang-test-suite" preserve-order="true" parallel="false">
        <parameter name="enableNonBlocking" value="false"  />
        <packages>
            <package name="org.ballerinalang.model.values"/>
            <package name="org.ballerinalang.model.expressions"/>
            <package name="org.ballerinalang.model.statements"/>
            <package name="org.ballerinalang.model.structs"/>
            <package name="org.ballerinalang.model.connectors"/>
            <package name="org.ballerinalang.model.annotations"/>
            <package name="org.ballerinalang.model.arraysofarrays"/>
        </packages>
        <classes>
            <class name="org.ballerinalang.TestConfigurationUtil" />
        </classes>
    </test>
    <!-- Ballerina Test Cases - Non Blocking. -->
    <test name="ballerina-lang-test-suite-non-blocking" preserve-order="true" parallel="false">
        <parameter name="enableNonBlocking" value="true" />
        <packages>
            <!--<package name="org.ballerinalang.model.values"/>-->
            <!--<package name="org.ballerinalang.model.expressions"/>-->
            <!--<package name="org.ballerinalang.model.statements"/>-->
            <!--<package name="org.ballerinalang.model.structs"/>-->
            <package name="org.ballerinalang.model.connectors"/>
            <package name="org.ballerinalang.model.annotations"/>
            <package name="org.ballerinalang.model.arraysofarrays"/>
        </packages>
        <classes>
            <class name="org.ballerinalang.TestConfigurationUtil" />
        </classes>
    </test>

    <!-- Parser Level Test Cases -->
    <test name="ballerina-parser-unit-tests" preserve-order="true" parallel="false">
        <classes>
            <!-- Negative Test cases -->
            <class name="org.ballerinalang.core.parser.negative.InvalidSyntaxParserTest"/>
            <!-- whitespace capture test cases -->
            <class name="org.ballerinalang.core.parser.whitespace.WhiteSpaceCaptureTest"/>
        </classes>
    </test>

    <!-- Native Function Related Test Cases. -->
    <test name="ballerina-native-functions-unit-tests" preserve-order="true" parallel="false">
        <parameter name="enableNonBlocking" value="false" />
        <packages>
            <package name="org.ballerinalang.core.nativeimpl.functions"/>
        </packages>
        <classes>
            <class name="org.ballerinalang.TestConfigurationUtil" />
        </classes>
    </test>
    <!-- Native Function Related Test Cases. -->
    <test name="ballerina-native-functions-unit-tests-non-blocking" preserve-order="true" parallel="false">
        <parameter name="enableNonBlocking" value="true" />
        <packages>
            <package name="org.ballerinalang.core.nativeimpl.functions"/>
        </packages>
        <classes>
            <class name="org.ballerinalang.TestConfigurationUtil" />
        </classes>
    </test>


    <test name="ballerina-service-test">
        <parameter name="enableNonBlocking" value="false" />
        <classes>
            <class name="org.ballerinalang.TestConfigurationUtil" />
            <class name="org.ballerinalang.service.ServiceVariableTest"/>
            <class name="org.ballerinalang.service.JMSServiceTest" />
            <class name="org.ballerinalang.service.FileServiceTest" />
        </classes>
    </test>
    <!-- Non Blocking Test Cases -->
    <test name="ballerina-service-test-non-blocking">
        <parameter name="enableNonBlocking" value="true" />
        <classes>
            <class name="org.ballerinalang.TestConfigurationUtil" />
            <class name="org.ballerinalang.service.ServiceVariableTest"/>
            <class name="org.ballerinalang.service.JMSServiceTest" />
        </classes>
    </test>

    <!-- Debugger TestCases -->

    <test name="ballerina-interpreter-test-suite" preserve-order="true" parallel="false">
        <classes>
            <class name="org.ballerinalang.core.interpreter.DebuggerTest"/>
        </classes>
    </test>


    <test name="ballerina-any-type-test-suite">
        <parameter name="enableNonBlocking" value="false" />
        <classes>
            <class name="org.ballerinalang.TestConfigurationUtil" />
            <class name="org.ballerinalang.model.any.BAnyTypeSuccessScenariosTest"/>
            <class name="org.ballerinalang.model.any.BAnyTypeInvalidCastError"/>
            <class name="org.ballerinalang.model.any.BAnyTypeToIntImplicitCastError"/>
        </classes>
    </test>
    <!-- Non Blocking Test Cases -->
    <test name="ballerina-any-type-test-suite-non-blocking">
        <parameter name="enableNonBlocking" value="true" />
        <classes>
            <class name="org.ballerinalang.TestConfigurationUtil" />
            <class name="org.ballerinalang.model.any.BAnyTypeSuccessScenariosTest"/>
            <!--<class name="org.ballerinalang.model.any.BAnyTypeInvalidCastError"/>-->
            <class name="org.ballerinalang.model.any.BAnyTypeToIntImplicitCastError"/>
        </classes>
    </test>

    <test name="ballerina-global-var-test-suite">
        <parameter name="enableNonBlocking" value="false" />
        <classes>
            <class name="org.ballerinalang.TestConfigurationUtil" />
            <class name="org.ballerinalang.model.globalvar.GlobalVarFunctionTest" />
            <class name="org.ballerinalang.model.globalvar.GlobalVarFunctionWithPkgTest" />
            <class name="org.ballerinalang.model.globalvar.GlobalVarErrorTest" />
        </classes>
    </test>
    <!-- Non Blocking Test Cases -->
    <test name="ballerina-global-var-test-suite-non-blocking">
        <parameter name="enableNonBlocking" value="true" />
        <classes>
            <class name="org.ballerinalang.TestConfigurationUtil" />
            <class name="org.ballerinalang.model.globalvar.GlobalVarFunctionTest" />
            <class name="org.ballerinalang.model.globalvar.GlobalVarFunctionWithPkgTest" />
            <class name="org.ballerinalang.model.globalvar.GlobalVarErrorTest" />
        </classes>
    </test>

    <test name="ballerina-constant-access-test-suite">
        <parameter name="enableNonBlocking" value="false" />
        <classes>
            <class name="org.ballerinalang.TestConfigurationUtil" />
            <class name="org.ballerinalang.model.constant.ConstantAccessTest" />
        </classes>
    </test>
    <!-- Non Blocking Test Cases -->
    <test name="ballerina-constant-access-test-suite-non-blocking">
        <parameter name="enableNonBlocking" value="true" />
        <classes>
            <class name="org.ballerinalang.TestConfigurationUtil" />
            <class name="org.ballerinalang.model.constant.ConstantAccessTest" />
        </classes>
    </test>

    <test name="ballerina-identifier-literal-test-suite">
        <parameter name="enableNonBlocking" value="false" />
        <classes>
            <class name="org.ballerinalang.TestConfigurationUtil" />
            <class name="org.ballerinalang.model.identifierliteral.IdentifierLiteralPackageTest" />
            <class name="org.ballerinalang.model.identifierliteral.IdentifierLiteralTest" />
        </classes>
    </test>
    <!-- Non Blocking Test Cases -->
    <test name="ballerina-identifier-literal-test-suite-non-blocking">
        <parameter name="enableNonBlocking" value="true" />
        <classes>
            <class name="org.ballerinalang.TestConfigurationUtil" />
            <class name="org.ballerinalang.model.identifierliteral.IdentifierLiteralPackageTest" />
            <class name="org.ballerinalang.model.identifierliteral.IdentifierLiteralTest" />
        </classes>
    </test>
</suite>
