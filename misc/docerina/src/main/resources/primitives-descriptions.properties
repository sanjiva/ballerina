int=The `int` data type is a 64-bit two's complement integer. 
float=The `float` data type is a double-precision 64-bit IEEE 754 floating point.
string=The `string` data type is a series of characters gathered together. 
boolean=The `boolean` data type has only two possible values of `true` and `false`. A variable of `boolean` type \
  defaults to `true`.
blob=The `blob` data type represents a sequence of bytes.
typedesc=The `typedesc` data type as a special type whose values are the types that are in the BVM. 
table=The `table` data type consists of three main elments. The `primaryKeys` element defines the fields of the table\
   that act as primary keys. The `indices` element defines the the fields of the table that are not primary keys. The\
   `values` element defines array of records for the table. 
stream=
json=
xml=The `xml` data type represents a sequence of zero or more characters or XML elements.
any=The `any` data type represents all the available data types.
map=The `map` data type represents a mutable mapping from keys, which are strings, to values; specifies maps in terms\
   of a single type to which all keys are mapped.
future=
array=The `array` data type represents a dynamic length, mutable list of values, where each member of the list is \
  specified with the same type.
union=
tuple=The `tuple` data type represents a fixed length, immutable, list of values, where each member of the list has \
  its own type.
record=The `record` data type represents a mutable mapping from keys, which are strings, to values; specifies maps in\
   terms of names of fields (required keys) and value for each field. 
