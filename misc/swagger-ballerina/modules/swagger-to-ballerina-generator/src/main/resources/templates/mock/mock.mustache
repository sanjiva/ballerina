import ballerina/http;
import ballerina/swagger;

{{#servers}}endpoint http:Listener ep{{@index}} {
    host: "{{host}}",
    port: {{port}}
};
{{/servers}}
@swagger:ServiceInfo { {{#info}}
    title: "{{title}}",
    description: "{{description}}",
    serviceVersion: "{{version}}",
    termsOfService: "{{termsOfService}}",
    contact: {name: "{{contact.name}}", email: "{{contact.email}}", url: "{{contact.url}}"},
    license: {name: "{{license.name}}", url: "{{license.url}}"},{{/info}}
    tags: [{{#tags}}
        {name: "{{name}}", description: "{{description}}", externalDocs: {{>doc}} }{{#unless @last}},{{/unless}}{{/tags}}
    ],
    externalDocs: {{>doc}},
    security: [{{#security}}
        {{>security}}{{/security}}
    ]
}
@http:ServiceConfig {
    basePath: "{{servers.0.basePath}}"{{!-- {{only one base path is allowed for all endpoints}} --}}
}
service<http:Service> {{cut info.title " "}} bind {{#servers}}ep{{@index}}{{#unless @last}}, {{/unless}}{{/servers}} {
{{#paths}}{{#value}}{{#operations}}{{#value}}
    @swagger:ResourceInfo {
        tags: [{{#tags}}"{{.}}"{{#unless @last}},{{/unless}}{{/tags}}],
        summary: "{{summary}}",
        description: "{{description}}",
        externalDocs: {{>doc}},
        parameters: [{{#parameters}}
            {
                name: "{{name}}",
                inInfo: "{{in}}",
                description: "{{description}}", {{#required}}
                required: {{required}},{{/required}} {{#deprecated}}
                discontinued: {{deprecated}},{{/deprecated}}
                allowEmptyValue: "{{allowEmptyValue}}"
            }{{#unless @last}},{{/unless}}{{/parameters}}
        ]
    }
    @http:ResourceConfig {
        methods:["{{upper key}}"],
        path:"{{../../key}}"
    }{{#deprecated}}
    deprecated {}{{/deprecated}}
    {{operationId}} (endpoint outboundEp, http:Request req{{#parameters}}{{>pathParams}}{{/parameters}}) {
        http:Response res = {{operationId}}(req{{#parameters}}{{#equals in "path"}}, {{name}}{{/equals}}{{/parameters}});
        _ = outboundEp -> respond(res);
    }
{{/value}}{{/operations}}{{/value}}{{/paths}}
}
