{{#apiPackage}}package {{apiPackage}};

import {{apiPackage}}.model;{{/apiPackage}}
import ballerina.net.http;

public connector {{cut info.title " "}} () {

    endpoint <http:HttpClient> ep {
        create http:HttpClient("{{url}}", {});
    }
    http:HttpConnectorError httpError;
{{#paths}}{{#value}}{{#get}}
    action {{operationId}} () (http:InResponse, error ) {
        http:OutRequest request = {};
        http:InResponse response = {};
        error outError;

        //Create sample json request as follows.
        //http:Request request = {};
        //request.setHeader("Content-Type", "application/json");
        response, httpError = ep.get("{{@key}}", request);
        if (httpError != null) {
            outError = {message:httpError.message, cause:httpError.cause};
        }

        return response, outError;
    }
{{/get}}{{#post}}
    action {{operationId}} () (http:InResponse, error ) {
        http:OutRequest request = {};
        http:InResponse response = {};
        error outError;

        //Create the required request as needed
        //request.setHeader("Content-Type", "application/json");
        response, httpError = ep.post("{{@key}}", request);
        if (httpError != null) {
            outError = {message:httpError.message, cause:httpError.cause};
        }

        return response, outError;
    }
{{/post}}{{#put}}
    action {{operationId}} () (http:InResponse, error ) {
        http:OutRequest request = {};
        http:InResponse response = {};
        error outError;

        //Create the required request as needed
        //request.setHeader("Content-Type", "application/json");
        response, httpError = ep.put("{{@key}}", request);
        if (httpError != null) {
            outError = {message:httpError.message, cause:httpError.cause};
        }

        return response, outError;
    }
{{/put}}{{#delete}}
    action {{operationId}} () (http:InResponse, error ) {
        http:OutRequest request = {};
        http:InResponse response = {};
        error outError;

        //Create the required request as needed
        //request.setHeader("Content-Type", "application/json");
        response, httpError = ep.delete("{{@key}}", request);
        if (httpError != null) {
            outError = {message:httpError.message, cause:httpError.cause};
        }

        return response, outError;
    }
{{/delete}}{{#options}}
    action {{operationId}} () (http:InResponse, error ) {
        http:OutRequest request = {};
        http:InResponse response = {};
        error outError;

        //Create the required request as needed
        //request.setHeader("Content-Type", "application/json");
        response, httpError = ep.options("{{@key}}", request);
        if (httpError != null) {
            outError = {message:httpError.message, cause:httpError.cause};
        }

        return response, outError;
    }
{{/options}}{{#head}}
    action {{operationId}} () (http:InResponse, error ) {
        http:OutRequest request = {};
        http:InResponse response = {};
        error outError;

        //Create the required request as needed
        //request.setHeader("Content-Type", "application/json");
        response, httpError = ep.head("{{@key}}", request);
        if (httpError != null) {
            outError = {message:httpError.message, cause:httpError.cause};
        }

        return response, outError;
    }
{{/head}}{{#patch}}
    action {{operationId}} () (http:InResponse, error ) {
        http:OutRequest request = {};
        http:InResponse response = {};
        error outError;

        //Create the required request as needed
        //request.setHeader("Content-Type", "application/json");
        response, httpError = ep.patch("{{@key}}", request);
        if (httpError != null) {
            outError = {message:httpError.message, cause:httpError.cause};
        }

        return response, outError;
    }
{{/patch}}{{/value}}{{/paths}}
}
